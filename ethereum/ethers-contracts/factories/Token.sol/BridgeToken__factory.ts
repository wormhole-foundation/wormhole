/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../Token.sol/BridgeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161096338038061096383398101604081905261002f91610486565b818161005c60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610546565b60008051602061091c8339815191521461007857610078610567565b6100848282600061008d565b505050506105e7565b61009683610158565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100d75750805b1561015357610151836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610141919061057d565b836102e960201b6100291760201c565b505b505050565b61016b8161031760201b6100551760201c565b6101ca5760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61023e816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022f919061057d565b61031760201b6100551760201c565b6102a35760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101c1565b806102c860008051602061091c83398151915260001b61031d60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b606061030e838360405180606001604052806027815260200161093c60279139610320565b90505b92915050565b3b151590565b90565b6060833b61037f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101c1565b600080856001600160a01b03168560405161039a9190610598565b600060405180830381855af49150503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b5090925090506103eb8282866103f7565b925050505b9392505050565b606083156104065750816103f0565b8251156104165782518084602001fd5b8160405162461bcd60e51b81526004016101c191906105b4565b80516001600160a01b038116811461044757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047d578181015183820152602001610465565b50506000910152565b6000806040838503121561049957600080fd5b6104a283610430565b60208401519092506001600160401b03808211156104bf57600080fd5b818501915085601f8301126104d357600080fd5b8151818111156104e5576104e561044c565b604051601f8201601f19908116603f0116810190838211818310171561050d5761050d61044c565b8160405282815288602084870101111561052657600080fd5b610537836020830160208801610462565b80955050505050509250929050565b8181038181111561031157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058f57600080fd5b61030e82610430565b600082516105aa818460208701610462565b9190910192915050565b60208152600082518060208401526105d3816040850160208701610462565b601f01601f19169190910160400192915050565b610326806105f66000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102ca6027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a919061027a565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b81526004016101769190610296565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b50506000910152565b6000825161028c818460208701610256565b9190910192915050565b60208152600082518060208401526102b5816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206c0da8f03ab7dff57a13f7129c75c765c9783317ceff04956c3a024ae8c1b0dc64736f6c63430008110033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    beacon: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(beacon, data, overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    beacon: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(beacon, data, overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
