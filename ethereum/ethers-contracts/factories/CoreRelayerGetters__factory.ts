/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CoreRelayerGetters,
  CoreRelayerGettersInterface,
} from "../CoreRelayerGetters";

const _abi = [
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chain",
        type: "uint16",
      },
    ],
    name: "registeredCoreRelayerContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610254806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639a8a0592116100665780639a8a059214610134578063b172b2221461014f578063d60b347f14610157578063e039f22414610183578063fbe3c2cd1461018b57600080fd5b80631a9b5409146100985780632c3c02a4146100cf57806364d42b171461010257806384acd1bb1461010a575b600080fd5b6100bc6100a63660046101b1565b61ffff166000908152600c602052604090205490565b6040519081526020015b60405180910390f35b6100f26100dd3660046101dc565b60009081526004602052604090205460ff1690565b60405190151581526020016100c6565b6003546100bc565b6000546201000090046001600160a01b03166040516001600160a01b0390911681526020016100c6565b60005461ffff165b60405161ffff90911681526020016100c6565b6001546100bc565b6100f26101653660046101f5565b6001600160a01b03166000908152600b602052604090205460ff1690565b6100f261019e565b600054600160b01b900461ffff1661013c565b6000466101aa60035490565b1415905090565b6000602082840312156101c357600080fd5b813561ffff811681146101d557600080fd5b9392505050565b6000602082840312156101ee57600080fd5b5035919050565b60006020828403121561020757600080fd5b81356001600160a01b03811681146101d557600080fdfea264697066735822122040ba118427891a074d4fceb3d40f47ba11cafa8d6a1e6d24a70f261e0fa8c41864736f6c63430008110033";

type CoreRelayerGettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoreRelayerGettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoreRelayerGetters__factory extends ContractFactory {
  constructor(...args: CoreRelayerGettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoreRelayerGetters> {
    return super.deploy(overrides || {}) as Promise<CoreRelayerGetters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoreRelayerGetters {
    return super.attach(address) as CoreRelayerGetters;
  }
  override connect(signer: Signer): CoreRelayerGetters__factory {
    return super.connect(signer) as CoreRelayerGetters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreRelayerGettersInterface {
    return new utils.Interface(_abi) as CoreRelayerGettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoreRelayerGetters {
    return new Contract(address, _abi, signerOrProvider) as CoreRelayerGetters;
  }
}
