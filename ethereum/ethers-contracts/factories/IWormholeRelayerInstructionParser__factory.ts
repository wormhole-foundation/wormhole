/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWormholeRelayerInstructionParser,
  IWormholeRelayerInstructionParserInterface,
} from "../IWormholeRelayerInstructionParser";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeDeliveryInstructionsContainer",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "payloadId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "sufficientlyFunded",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "enum IWormholeRelayer.MessageInfoType",
                name: "infoType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "emitterAddress",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "vaaHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IWormholeRelayer.MessageInfo[]",
            name: "messages",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
              },
              {
                internalType: "bytes32",
                name: "targetAddress",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "refundAddress",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "maximumRefundTarget",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "receiverValueTarget",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "version",
                    type: "uint8",
                  },
                  {
                    internalType: "uint32",
                    name: "gasLimit",
                    type: "uint32",
                  },
                  {
                    internalType: "bytes32",
                    name: "providerDeliveryAddress",
                    type: "bytes32",
                  },
                ],
                internalType:
                  "struct IWormholeRelayerInstructionParser.ExecutionParameters",
                name: "executionParameters",
                type: "tuple",
              },
            ],
            internalType:
              "struct IWormholeRelayerInstructionParser.DeliveryInstruction[]",
            name: "instructions",
            type: "tuple[]",
          },
        ],
        internalType:
          "struct IWormholeRelayerInstructionParser.DeliveryInstructionsContainer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeRedeliveryInstruction",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "payloadId",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "sourceChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "sourceTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "deliveryVAASequence",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "targetChain",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "multisendIndex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "newMaximumRefundTarget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newReceiverValueTarget",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "version",
                type: "uint8",
              },
              {
                internalType: "uint32",
                name: "gasLimit",
                type: "uint32",
              },
              {
                internalType: "bytes32",
                name: "providerDeliveryAddress",
                type: "bytes32",
              },
            ],
            internalType:
              "struct IWormholeRelayerInstructionParser.ExecutionParameters",
            name: "executionParameters",
            type: "tuple",
          },
        ],
        internalType:
          "struct IWormholeRelayerInstructionParser.RedeliveryByTxHashInstruction",
        name: "instruction",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "whFormatAddress",
        type: "bytes32",
      },
    ],
    name: "fromWormholeFormat",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "toWormholeFormat",
    outputs: [
      {
        internalType: "bytes32",
        name: "whFormat",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IWormholeRelayerInstructionParser__factory {
  static readonly abi = _abi;
  static createInterface(): IWormholeRelayerInstructionParserInterface {
    return new utils.Interface(
      _abi
    ) as IWormholeRelayerInstructionParserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWormholeRelayerInstructionParser {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IWormholeRelayerInstructionParser;
  }
}
