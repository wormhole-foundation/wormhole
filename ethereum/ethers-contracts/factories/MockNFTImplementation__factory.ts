/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockNFTImplementation,
  MockNFTImplementationInterface,
} from "../MockNFTImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "nativeContract_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testNewImplementationActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061171b806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb46514610273578063b88d4fde14610286578063c87b56dd14610299578063d3fc9864146102ac578063e985e9c5146102bf57600080fd5b80636352211e1461021357806370a08231146102265780638da5cb5b1461023957806395d89b411461024a5780639a8a05921461025257600080fd5b80631f8cdb2b116100f45780631f8cdb2b146101c157806323b872dd146101c85780633d6c043b146101db57806342842e0e146101ed57806342966c681461020057600080fd5b806301ffc9a71461013157806303e728581461015957806306fdde031461016e578063081812fc14610183578063095ea7b3146101ae575b600080fd5b61014461013f3660046110ad565b6102d2565b60405190151581526020015b60405180910390f35b61016c610167366004611199565b610324565b005b6101766103e1565b6040516101509190611275565b610196610191366004611288565b610475565b6040516001600160a01b039091168152602001610150565b61016c6101bc3660046112a1565b61050a565b6001610144565b61016c6101d63660046112cb565b61061f565b6008545b604051908152602001610150565b61016c6101fb3660046112cb565b610650565b61016c61020e366004611288565b61066b565b610196610221366004611288565b6106cb565b6101df610234366004611307565b610742565b6007546001600160a01b0316610196565b6101766107c9565b600754600160a81b900461ffff1660405161ffff9091168152602001610150565b61016c610281366004611322565b6107db565b61016c61029436600461135e565b61089f565b6101766102a7366004611288565b6108d7565b61016c6102ba3660046113da565b6109f4565b6101446102cd366004611431565b610a53565b60006001600160e01b031982166380ac58cd60e01b148061030357506001600160e01b03198216635b5e139f60e01b145b8061031e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600754600160a01b900460ff16156103795760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b6007805460ff60a01b1916600160a01b179055600061039886826114ec565b5060016103a585826114ec565b506007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b0390941693909317919091179091556008555050565b60606000800180546103f290611464565b80601f016020809104026020016040519081016040528092919081815260200182805461041e90611464565b801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104ee5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610370565b506000908152600460205260409020546001600160a01b031690565b6000610515826106cb565b9050806001600160a01b0316836001600160a01b0316036105825760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610370565b336001600160a01b038216148061059e575061059e8133610a53565b6106105760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610370565b61061a8383610a81565b505050565b6106293382610aef565b6106455760405162461bcd60e51b8152600401610370906115ac565b61061a838383610bc6565b61061a8383836040518060200160405280600081525061089f565b6007546001600160a01b031633146106bf5760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b6044820152606401610370565b6106c881610d66565b50565b6000818152600260205260408120546001600160a01b03168061031e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610370565b60006001600160a01b0382166107ad5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610370565b506001600160a01b031660009081526003602052604090205490565b6060600060010180546103f290611464565b336001600160a01b038316036108335760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610370565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108a93383610aef565b6108c55760405162461bcd60e51b8152600401610370906115ac565b6108d184848484610e01565b50505050565b6000818152600260205260409020546060906001600160a01b03166109565760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610370565b6000828152600560205260409020805461096f90611464565b80601f016020809104026020016040519081016040528092919081815260200182805461099b90611464565b80156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b50505050509050919050565b6007546001600160a01b03163314610a485760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b6044820152606401610370565b61061a838383610e34565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ab6826106cb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610b685760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610370565b6000610b73836106cb565b9050806001600160a01b0316846001600160a01b03161480610bae5750836001600160a01b0316610ba384610475565b6001600160a01b0316145b80610bbe5750610bbe8185610a53565b949350505050565b826001600160a01b0316610bd9826106cb565b6001600160a01b031614610c415760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610370565b6001600160a01b038216610ca35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610370565b610cae600082610a81565b6001600160a01b0383166000908152600360205260408120805460019290610cd7908490611613565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d05908490611626565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610d71826106cb565b9050610d7e600083610a81565b6001600160a01b0381166000908152600360205260408120805460019290610da7908490611613565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610e0c848484610bc6565b610e1884848484610f96565b6108d15760405162461bcd60e51b815260040161037090611639565b6001600160a01b038316610e8a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610370565b6000828152600260205260409020546001600160a01b031615610eef5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610370565b6001600160a01b0383166000908152600360205260408120805460019290610f18908490611626565b9091555050600082815260026020908152604080832080546001600160a01b0319166001600160a01b03881617905560059091529020610f5882826114ec565b5060405182906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0384163b1561108c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fda90339089908890889060040161168b565b6020604051808303816000875af1925050508015611015575060408051601f3d908101601f19168201909252611012918101906116c8565b60015b611072573d808015611043576040519150601f19603f3d011682016040523d82523d6000602084013e611048565b606091505b50805160000361106a5760405162461bcd60e51b815260040161037090611639565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bbe565b506001949350505050565b6001600160e01b0319811681146106c857600080fd5b6000602082840312156110bf57600080fd5b81356110ca81611097565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611102576111026110d1565b604051601f8501601f19908116603f0116810190828211818310171561112a5761112a6110d1565b8160405280935085815286868601111561114357600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261116e57600080fd5b6110ca838335602085016110e7565b80356001600160a01b038116811461119457600080fd5b919050565b600080600080600060a086880312156111b157600080fd5b853567ffffffffffffffff808211156111c957600080fd5b6111d589838a0161115d565b965060208801359150808211156111eb57600080fd5b506111f88882890161115d565b9450506112076040870161117d565b9250606086013561ffff8116811461121e57600080fd5b949793965091946080013592915050565b6000815180845260005b8181101561125557602081850181015186830182015201611239565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110ca602083018461122f565b60006020828403121561129a57600080fd5b5035919050565b600080604083850312156112b457600080fd5b6112bd8361117d565b946020939093013593505050565b6000806000606084860312156112e057600080fd5b6112e98461117d565b92506112f76020850161117d565b9150604084013590509250925092565b60006020828403121561131957600080fd5b6110ca8261117d565b6000806040838503121561133557600080fd5b61133e8361117d565b91506020830135801515811461135357600080fd5b809150509250929050565b6000806000806080858703121561137457600080fd5b61137d8561117d565b935061138b6020860161117d565b925060408501359150606085013567ffffffffffffffff8111156113ae57600080fd5b8501601f810187136113bf57600080fd5b6113ce878235602084016110e7565b91505092959194509250565b6000806000606084860312156113ef57600080fd5b6113f88461117d565b925060208401359150604084013567ffffffffffffffff81111561141b57600080fd5b6114278682870161115d565b9150509250925092565b6000806040838503121561144457600080fd5b61144d8361117d565b915061145b6020840161117d565b90509250929050565b600181811c9082168061147857607f821691505b60208210810361149857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561061a57600081815260208120601f850160051c810160208610156114c55750805b601f850160051c820191505b818110156114e4578281556001016114d1565b505050505050565b815167ffffffffffffffff811115611506576115066110d1565b61151a816115148454611464565b8461149e565b602080601f83116001811461154f57600084156115375750858301515b600019600386901b1c1916600185901b1785556114e4565b600085815260208120601f198616915b8281101561157e5788860151825594840194600190910190840161155f565b508582101561159c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561031e5761031e6115fd565b8082018082111561031e5761031e6115fd565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116be9083018461122f565b9695505050505050565b6000602082840312156116da57600080fd5b81516110ca8161109756fea26469706673582212207ae8a65a7997a60a8afb1be8e62214b8164f1d5119ea1c7ddcb85be43da4d47164736f6c63430008110033";

type MockNFTImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNFTImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNFTImplementation__factory extends ContractFactory {
  constructor(...args: MockNFTImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockNFTImplementation> {
    return super.deploy(overrides || {}) as Promise<MockNFTImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockNFTImplementation {
    return super.attach(address) as MockNFTImplementation;
  }
  override connect(signer: Signer): MockNFTImplementation__factory {
    return super.connect(signer) as MockNFTImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNFTImplementationInterface {
    return new utils.Interface(_abi) as MockNFTImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockNFTImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockNFTImplementation;
  }
}
