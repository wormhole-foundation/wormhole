/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NFTImplementation,
  NFTImplementationInterface,
} from "../NFTImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "nativeContract_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611709806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb46514610261578063b88d4fde14610274578063c87b56dd14610287578063d3fc98641461029a578063e985e9c5146102ad57600080fd5b80636352211e1461020157806370a08231146102145780638da5cb5b1461022757806395d89b41146102385780639a8a05921461024057600080fd5b8063095ea7b3116100f4578063095ea7b3146101a357806323b872dd146101b65780633d6c043b146101c957806342842e0e146101db57806342966c68146101ee57600080fd5b806301ffc9a71461012657806303e728581461014e57806306fdde0314610163578063081812fc14610178575b600080fd5b61013961013436600461109b565b6102c0565b60405190151581526020015b60405180910390f35b61016161015c366004611187565b610312565b005b61016b6103cf565b6040516101459190611263565b61018b610186366004611276565b610463565b6040516001600160a01b039091168152602001610145565b6101616101b136600461128f565b6104f8565b6101616101c43660046112b9565b61060d565b6008545b604051908152602001610145565b6101616101e93660046112b9565b61063e565b6101616101fc366004611276565b610659565b61018b61020f366004611276565b6106b9565b6101cd6102223660046112f5565b610730565b6007546001600160a01b031661018b565b61016b6107b7565b600754600160a81b900461ffff1660405161ffff9091168152602001610145565b61016161026f366004611310565b6107c9565b61016161028236600461134c565b61088d565b61016b610295366004611276565b6108c5565b6101616102a83660046113c8565b6109e2565b6101396102bb36600461141f565b610a41565b60006001600160e01b031982166380ac58cd60e01b14806102f157506001600160e01b03198216635b5e139f60e01b145b8061030c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600754600160a01b900460ff16156103675760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b6007805460ff60a01b1916600160a01b179055600061038686826114da565b50600161039385826114da565b506007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b0390941693909317919091179091556008555050565b60606000800180546103e090611452565b80601f016020809104026020016040519081016040528092919081815260200182805461040c90611452565b80156104595780601f1061042e57610100808354040283529160200191610459565b820191906000526020600020905b81548152906001019060200180831161043c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104dc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161035e565b506000908152600460205260409020546001600160a01b031690565b6000610503826106b9565b9050806001600160a01b0316836001600160a01b0316036105705760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161035e565b336001600160a01b038216148061058c575061058c8133610a41565b6105fe5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161035e565b6106088383610a6f565b505050565b6106173382610add565b6106335760405162461bcd60e51b815260040161035e9061159a565b610608838383610bb4565b6106088383836040518060200160405280600081525061088d565b6007546001600160a01b031633146106ad5760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015260640161035e565b6106b681610d54565b50565b6000818152600260205260408120546001600160a01b03168061030c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161035e565b60006001600160a01b03821661079b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161035e565b506001600160a01b031660009081526003602052604090205490565b6060600060010180546103e090611452565b336001600160a01b038316036108215760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161035e565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108973383610add565b6108b35760405162461bcd60e51b815260040161035e9061159a565b6108bf84848484610def565b50505050565b6000818152600260205260409020546060906001600160a01b03166109445760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161035e565b6000828152600560205260409020805461095d90611452565b80601f016020809104026020016040519081016040528092919081815260200182805461098990611452565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b50505050509050919050565b6007546001600160a01b03163314610a365760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015260640161035e565b610608838383610e22565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610aa4826106b9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610b565760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161035e565b6000610b61836106b9565b9050806001600160a01b0316846001600160a01b03161480610b9c5750836001600160a01b0316610b9184610463565b6001600160a01b0316145b80610bac5750610bac8185610a41565b949350505050565b826001600160a01b0316610bc7826106b9565b6001600160a01b031614610c2f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161035e565b6001600160a01b038216610c915760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161035e565b610c9c600082610a6f565b6001600160a01b0383166000908152600360205260408120805460019290610cc5908490611601565b90915550506001600160a01b0382166000908152600360205260408120805460019290610cf3908490611614565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610d5f826106b9565b9050610d6c600083610a6f565b6001600160a01b0381166000908152600360205260408120805460019290610d95908490611601565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610dfa848484610bb4565b610e0684848484610f84565b6108bf5760405162461bcd60e51b815260040161035e90611627565b6001600160a01b038316610e785760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161035e565b6000828152600260205260409020546001600160a01b031615610edd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161035e565b6001600160a01b0383166000908152600360205260408120805460019290610f06908490611614565b9091555050600082815260026020908152604080832080546001600160a01b0319166001600160a01b03881617905560059091529020610f4682826114da565b5060405182906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0384163b1561107a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fc8903390899088908890600401611679565b6020604051808303816000875af1925050508015611003575060408051601f3d908101601f19168201909252611000918101906116b6565b60015b611060573d808015611031576040519150601f19603f3d011682016040523d82523d6000602084013e611036565b606091505b5080516000036110585760405162461bcd60e51b815260040161035e90611627565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bac565b506001949350505050565b6001600160e01b0319811681146106b657600080fd5b6000602082840312156110ad57600080fd5b81356110b881611085565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156110f0576110f06110bf565b604051601f8501601f19908116603f01168101908282118183101715611118576111186110bf565b8160405280935085815286868601111561113157600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261115c57600080fd5b6110b8838335602085016110d5565b80356001600160a01b038116811461118257600080fd5b919050565b600080600080600060a0868803121561119f57600080fd5b853567ffffffffffffffff808211156111b757600080fd5b6111c389838a0161114b565b965060208801359150808211156111d957600080fd5b506111e68882890161114b565b9450506111f56040870161116b565b9250606086013561ffff8116811461120c57600080fd5b949793965091946080013592915050565b6000815180845260005b8181101561124357602081850181015186830182015201611227565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110b8602083018461121d565b60006020828403121561128857600080fd5b5035919050565b600080604083850312156112a257600080fd5b6112ab8361116b565b946020939093013593505050565b6000806000606084860312156112ce57600080fd5b6112d78461116b565b92506112e56020850161116b565b9150604084013590509250925092565b60006020828403121561130757600080fd5b6110b88261116b565b6000806040838503121561132357600080fd5b61132c8361116b565b91506020830135801515811461134157600080fd5b809150509250929050565b6000806000806080858703121561136257600080fd5b61136b8561116b565b93506113796020860161116b565b925060408501359150606085013567ffffffffffffffff81111561139c57600080fd5b8501601f810187136113ad57600080fd5b6113bc878235602084016110d5565b91505092959194509250565b6000806000606084860312156113dd57600080fd5b6113e68461116b565b925060208401359150604084013567ffffffffffffffff81111561140957600080fd5b6114158682870161114b565b9150509250925092565b6000806040838503121561143257600080fd5b61143b8361116b565b91506114496020840161116b565b90509250929050565b600181811c9082168061146657607f821691505b60208210810361148657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561060857600081815260208120601f850160051c810160208610156114b35750805b601f850160051c820191505b818110156114d2578281556001016114bf565b505050505050565b815167ffffffffffffffff8111156114f4576114f46110bf565b611508816115028454611452565b8461148c565b602080601f83116001811461153d57600084156115255750858301515b600019600386901b1c1916600185901b1785556114d2565b600085815260208120601f198616915b8281101561156c5788860151825594840194600190910190840161154d565b508582101561158a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030c5761030c6115eb565b8082018082111561030c5761030c6115eb565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116ac9083018461121d565b9695505050505050565b6000602082840312156116c857600080fd5b81516110b88161108556fea26469706673582212200e04be5f5ddb869a3b723226820b328a51dd1e9170c7dc317c8bda510dc0835e64736f6c63430008110033";

type NFTImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTImplementation__factory extends ContractFactory {
  constructor(...args: NFTImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTImplementation> {
    return super.deploy(overrides || {}) as Promise<NFTImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTImplementation {
    return super.attach(address) as NFTImplementation;
  }
  override connect(signer: Signer): NFTImplementation__factory {
    return super.connect(signer) as NFTImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTImplementationInterface {
    return new utils.Interface(_abi) as NFTImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTImplementation {
    return new Contract(address, _abi, signerOrProvider) as NFTImplementation;
  }
}
