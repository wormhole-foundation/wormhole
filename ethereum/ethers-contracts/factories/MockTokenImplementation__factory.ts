/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockTokenImplementation,
  MockTokenImplementationInterface,
} from "../MockTokenImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue_",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "domainFields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "domainName",
        type: "string",
      },
      {
        internalType: "string",
        name: "domainVersion",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "domainChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "domainVerifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "domainSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "domainExtensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue_",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "nativeContract_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v_",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s_",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testNewImplementationActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
    ],
    name: "updateDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a4a806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637ecebe00116100c3578063a18cd7c61161007c578063a18cd7c6146102ba578063a457c2d7146102cd578063a9059cbb146102e0578063c71f4615146102f3578063d505accf14610306578063dd62ed3e1461031957600080fd5b80637ecebe001461023557806384b0196e146102485780638da5cb5b1461026357806395d89b411461027e5780639a8a0592146102865780639dc29fac146102a757600080fd5b8063313ce56711610115578063313ce567146101bf5780633644e515146101d457806339509351146101dc5780633d6c043b146101ef57806340c10f19146101f757806370a082311461020c57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd146101935780631f8cdb2b146101a557806323b872dd146101ac575b600080fd5b61015a610352565b6040516101679190611448565b60405180910390f35b61018361017e36600461147e565b6103e6565b6040519015158152602001610167565b6003545b604051908152602001610167565b6001610183565b6101836101ba3660046114a8565b6103fd565b60045460405160ff9091168152602001610167565b6101976104b3565b6101836101ea36600461147e565b6104c2565b600854610197565b61020a61020536600461147e565b6104f9565b005b61019761021a3660046114e4565b6001600160a01b031660009081526005602052604090205490565b6101976102433660046114e4565b610531565b61025061054f565b60405161016797969594939291906114ff565b6007546040516001600160a01b039091168152602001610167565b61015a6105ad565b600754600160a81b900461ffff1660405161ffff9091168152602001610167565b61020a6102b536600461147e565b6105bf565b61020a6102c8366004611650565b6105f3565b6101836102db36600461147e565b6106bf565b6101836102ee36600461147e565b61075a565b61020a6103013660046116d5565b610767565b61020a610314366004611790565b6107ea565b6101976103273660046117fa565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b60606000800180546103639061182d565b80601f016020809104026020016040519081016040528092919081815260200182805461038f9061182d565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b60006103f3338484610956565b5060015b92915050565b600061040a848484610a7b565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156104945760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104a885336104a38685611877565b610956565b506001949350505050565b60006104bd610c53565b905090565b3360008181526006602090815260408083206001600160a01b038716845290915281205490916103f39185906104a390869061188a565b6007546001600160a01b031633146105235760405162461bcd60e51b815260040161048b9061189d565b61052d8282610c95565b5050565b6001600160a01b0381166000908152600e60205260408120546103f7565b600060608060008060006060610563610352565b6040805180820190915260018152603160f81b60208201524630610585610d77565b604080516000815260208101909152601f60f81b9d959c50939a509198509650945092509050565b6060600060010180546103639061182d565b6007546001600160a01b031633146105e95760405162461bcd60e51b815260040161048b9061189d565b61052d8282610dc1565b6007546001600160a01b0316331461061d5760405162461bcd60e51b815260040161048b9061189d565b60025467ffffffffffffffff80831691161061067b5760405162461bcd60e51b815260206004820152601e60248201527f63757272656e74206d6574616461746120697320757020746f20646174650000604482015260640161048b565b60006106878482611922565b5060016106948382611922565b506002805467ffffffffffffffff191667ffffffffffffffff83161790556106ba610f10565b505050565b3360009081526006602090815260408083206001600160a01b0386168452909152812054828110156107415760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161048b565b61075033856104a38685611877565b5060019392505050565b60006103f3338484610a7b565b600754600160a01b900460ff16156107b75760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161048b565b6007805460ff60a01b1916600160a01b1790556107d987878787878787610f6c565b6107e1610f10565b50505050505050565b6107f2610f10565b834211156108425760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161048b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108718c610ffa565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108cc82611022565b905060006108dc82878787611035565b9050896001600160a01b0316816001600160a01b03161461093f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161048b565b61094a8a8a8a610956565b50505050505050505050565b6001600160a01b0383166109b85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048b565b6001600160a01b038216610a195760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048b565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610adf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048b565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048b565b6001600160a01b03831660009081526005602052604090205481811015610bb95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161048b565b610bc38282611877565b6001600160a01b038086166000908152600560205260408082209390935590851681529081208054849290610bf990849061188a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c4591815260200190565b60405180910390a350505050565b600b546000906001600160a01b031630148015610c715750600a5446145b15610c7d575060095490565b6104bd610c8861105d565b610c90610d77565b611077565b6001600160a01b038216610ceb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161048b565b8060006003016000828254610d00919061188a565b90915550506001600160a01b03821660009081526005602052604081208054839290610d2d90849061188a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600754600854604051600160a81b90920460f01b6001600160f01b031916602083015260228201526000906042015b60405160208183030381529060405280519060200120905090565b6001600160a01b038216610e215760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161048b565b6001600160a01b03821660009081526005602052604090205481811015610e955760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161048b565b610e9f8282611877565b6001600160a01b03841660009081526005602052604081209190915560038054849290610ecd908490611877565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a6e565b6000610f1a61105d565b90506000610f26610d77565b600d5490915082141580610f3c5750600c548114155b1561052d5746600a55600b80546001600160a01b03191630179055610f618282611077565b600955600c55600d55565b6000610f788882611922565b506001610f858782611922565b506004805460ff90961660ff19909616959095179094556002805467ffffffffffffffff90941667ffffffffffffffff19909416939093179092556007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b03909216919091179190911790556008555050565b6001600160a01b0381166000908152600e602052604090208054600181018255905b50919050565b60006103f761102f610c53565b8361112b565b600080600061104687878787611152565b915091506110538161123f565b5095945050505050565b6000611067610352565b604051602001610da691906119e2565b60007fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac56472836110b96040805180820190915260018152603160f81b602082015290565b6040516020016110c991906119e2565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091524660808201523060a082015260c0810183905260e0015b60405160208183030381529060405280519060200120905092915050565b60405161190160f01b6020820152602281018390526042810182905260009060620161110d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111895750600090506003611236565b8460ff16601b141580156111a157508460ff16601c14155b156111b25750600090506004611236565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611206573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661122f57600060019250925050611236565b9150600090505b94509492505050565b6000816004811115611253576112536119fe565b0361125b5750565b600181600481111561126f5761126f6119fe565b036112bc5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161048b565b60028160048111156112d0576112d06119fe565b0361131d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048b565b6003816004811115611331576113316119fe565b036113895760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048b565b600481600481111561139d5761139d6119fe565b036113f55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161048b565b50565b60005b838110156114135781810151838201526020016113fb565b50506000910152565b600081518084526114348160208601602086016113f8565b601f01601f19169290920160200192915050565b60208152600061145b602083018461141c565b9392505050565b80356001600160a01b038116811461147957600080fd5b919050565b6000806040838503121561149157600080fd5b61149a83611462565b946020939093013593505050565b6000806000606084860312156114bd57600080fd5b6114c684611462565b92506114d460208501611462565b9150604084013590509250925092565b6000602082840312156114f657600080fd5b61145b82611462565b60ff60f81b881681526000602060e08184015261151f60e084018a61141c565b8381036040850152611531818a61141c565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561158357835183529284019291840191600101611567565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126115bc57600080fd5b813567ffffffffffffffff808211156115d7576115d7611595565b604051601f8301601f19908116603f011681019082821181831017156115ff576115ff611595565b8160405283815286602085880101111561161857600080fd5b836020870160208301376000602085830101528094505050505092915050565b803567ffffffffffffffff8116811461147957600080fd5b60008060006060848603121561166557600080fd5b833567ffffffffffffffff8082111561167d57600080fd5b611689878388016115ab565b9450602086013591508082111561169f57600080fd5b506116ac868287016115ab565b9250506116bb60408501611638565b90509250925092565b803560ff8116811461147957600080fd5b600080600080600080600060e0888a0312156116f057600080fd5b873567ffffffffffffffff8082111561170857600080fd5b6117148b838c016115ab565b985060208a013591508082111561172a57600080fd5b506117378a828b016115ab565b965050611746604089016116c4565b945061175460608901611638565b935061176260808901611462565b925060a088013561ffff8116811461177957600080fd5b8092505060c0880135905092959891949750929550565b600080600080600080600060e0888a0312156117ab57600080fd5b6117b488611462565b96506117c260208901611462565b955060408801359450606088013593506117de608089016116c4565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561180d57600080fd5b61181683611462565b915061182460208401611462565b90509250929050565b600181811c9082168061184157607f821691505b60208210810361101c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103f7576103f7611861565b808201808211156103f7576103f7611861565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b601f8211156106ba57600081815260208120601f850160051c810160208610156118fb5750805b601f850160051c820191505b8181101561191a57828155600101611907565b505050505050565b815167ffffffffffffffff81111561193c5761193c611595565b6119508161194a845461182d565b846118d4565b602080601f831160018114611985576000841561196d5750858301515b600019600386901b1c1916600185901b17855561191a565b600085815260208120601f198616915b828110156119b457888601518255948401946001909101908401611995565b50858210156119d25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516119f48184602087016113f8565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204179af08b75a757f71d55d7f625ddd543df74d99d263d364fc2787f81dcf55f564736f6c63430008110033";

type MockTokenImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenImplementation__factory extends ContractFactory {
  constructor(...args: MockTokenImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockTokenImplementation> {
    return super.deploy(overrides || {}) as Promise<MockTokenImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockTokenImplementation {
    return super.attach(address) as MockTokenImplementation;
  }
  override connect(signer: Signer): MockTokenImplementation__factory {
    return super.connect(signer) as MockTokenImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenImplementationInterface {
    return new utils.Interface(_abi) as MockTokenImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTokenImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockTokenImplementation;
  }
}
