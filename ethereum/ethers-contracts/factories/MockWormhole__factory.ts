/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockWormhole, MockWormholeInterface } from "../MockWormhole";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "initChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "initEvmChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "GuardianSetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "LogMessagePublished",
    type: "event",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGuardianSetIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "getGuardianSet",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct IWormhole.GuardianSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuardianSetExpiry",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "invalidVMs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVm",
        type: "bytes",
      },
    ],
    name: "invalidateVM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "messageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "emitter",
        type: "address",
      },
    ],
    name: "nextSequence",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVm",
        type: "bytes",
      },
    ],
    name: "parseAndVerifyVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "parseContractUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "newContract",
            type: "address",
          },
        ],
        internalType: "struct IWormhole.ContractUpgrade",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "parseGuardianSetUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "keys",
                type: "address[]",
              },
              {
                internalType: "uint32",
                name: "expirationTime",
                type: "uint32",
              },
            ],
            internalType: "struct IWormhole.GuardianSet",
            name: "newGuardianSet",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "newGuardianSetIndex",
            type: "uint32",
          },
        ],
        internalType: "struct IWormhole.GuardianSetUpgrade",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "parseRecoverChainId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "evmChainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "newChainId",
            type: "uint16",
          },
        ],
        internalType: "struct IWormhole.RecoverChainId",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "parseSetMessageFee",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "messageFee",
            type: "uint256",
          },
        ],
        internalType: "struct IWormhole.SetMessageFee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "parseTransferFees",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "recipient",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.TransferFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVm",
        type: "bytes",
      },
    ],
    name: "parseVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "publishMessage",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sequences",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "submitContractUpgrade",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "submitNewGuardianSet",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "submitRecoverChainId",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "submitSetMessageFee",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "submitTransferFees",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "guardianIndex",
            type: "uint8",
          },
        ],
        internalType: "struct IWormhole.Signature[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct IWormhole.GuardianSet",
        name: "",
        type: "tuple",
      },
    ],
    name: "verifySignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "",
        type: "tuple",
      },
    ],
    name: "verifyVM",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516200238d3803806200238d83398101604081905261003191610042565b61ffff90911660805260a052610077565b6000806040838503121561005557600080fd5b825161ffff8116811461006757600080fd5b6020939093015192949293505050565b60805160a0516122f06200009d6000396000610509015260006105b601526122f06000f3fe6080604052600436106101ee5760003560e01c80638129fc1c1161010d578063c0fd8bde116100a0578063eb8d3f121161006f578063eb8d3f12146102d3578063f42bc6411461071b578063f8ce560a1461073b578063f951975a14610756578063fbe3c2cd1461078357600080fd5b8063c0fd8bde1461065d578063cb4cfea81461068c578063d60b347f146106e6578063e039f2241461070757600080fd5b8063a0cce1b3116100dc578063a0cce1b3146105e9578063a9e1189314610609578063b172b22214610636578063b19a437e1461064a57600080fd5b80638129fc1c1461054d578063875be02a1461055957806393df337e146105875780639a8a0592146105a757600080fd5b80634a12a76311610185578063515f324711610154578063515f3247146104805780635cb8cae2146104da57806364d42b17146104fa5780636606b4e01461052d57600080fd5b80634a12a763146103605780634cf842b5146103905780634fc608a3146103e75780634fdc60fa1461041d57600080fd5b80631cfe7951116101c15780631cfe7951146102d35780631e5a2802146102ef57806323aa2a9d1461030f5780632c3c02a41461032f57600080fd5b80630319e59c146101f357806304ca84cf14610265578063178149e7146102925780631a90a219146102b4575b600080fd5b3480156101ff57600080fd5b5061021361020e366004611a0f565b610797565b60405161025c9190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b34801561027157600080fd5b50610285610280366004611a0f565b610826565b60405161025c9190611aaa565b34801561029e57600080fd5b506102b26102ad366004611a0f565b610893565b005b3480156102c057600080fd5b506002545b60405190815260200161025c565b3480156102df57600080fd5b506040516000815260200161025c565b3480156102fb57600080fd5b506102b261030a366004611b07565b6108f5565b34801561031b57600080fd5b506102b261032a366004611b78565b600255565b34801561033b57600080fd5b5061035061034a366004611b78565b50600090565b604051901515815260200161025c565b34801561036c57600080fd5b5061035061037b366004611b78565b60016020526000908152604090205460ff1681565b34801561039c57600080fd5b506103cf6103ab366004611bad565b6001600160a01b03166000908152602081905260409020546001600160401b031690565b6040516001600160401b03909116815260200161025c565b3480156103f357600080fd5b506103cf610402366004611bad565b6000602081905290815260409020546001600160401b031681565b34801561042957600080fd5b5061043d610438366004611a0f565b610927565b60405161025c91908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b34801561048c57600080fd5b506104a061049b366004611a0f565b6109ad565b60405161025c91908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b3480156104e657600080fd5b506102b26104f5366004611a0f565b610a31565b34801561050657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102c5565b34801561053957600080fd5b506102b2610548366004611a0f565b610a94565b3480156102b257600080fd5b34801561056557600080fd5b50610579610574366004611cea565b610af6565b60405161025c929190611e54565b34801561059357600080fd5b506102b26105a2366004611a0f565b610b52565b3480156105b357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405161ffff909116815260200161025c565b3480156105f557600080fd5b50610579610604366004611e6f565b610bb2565b34801561061557600080fd5b50610629610624366004611b07565b610c16565b60405161025c91906120cb565b34801561064257600080fd5b5060046102c5565b6103cf6106583660046120de565b610c2f565b34801561066957600080fd5b5061067d610678366004611b07565b610d08565b60405161025c9392919061213b565b34801561069857600080fd5b506106ac6106a7366004611a0f565b610d54565b60405161025c91908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b3480156106f257600080fd5b50610350610701366004611bad565b50600190565b34801561071357600080fd5b506000610350565b34801561072757600080fd5b506102b2610736366004611a0f565b610dd9565b34801561074757600080fd5b506102c5610701366004611b78565b34801561076257600080fd5b50610776610771366004612172565b610e3a565b60405161025c919061218d565b34801561078f57600080fd5b5060016105d6565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915260405162461bcd60e51b815260206004820152602e60248201527f756e737570706f727465642070617273655472616e736665724665657320696e60448201526d20776f726d686f6c65206d6f636b60901b60648201526084015b60405180910390fd5b61082e611838565b60405162461bcd60e51b815260206004820152603460248201527f756e737570706f72746564207061727365477561726469616e5365745570677260448201527361646520696e20776f726d686f6c65206d6f636b60601b606482015260840161081d565b60405162461bcd60e51b815260206004820152603160248201527f756e737570706f72746564207375626d69745265636f766572436861696e496460448201527020696e20776f726d686f6c65206d6f636b60781b606482015260840161081d565b60006109018383610eab565b61014001516000908152600160208190526040909120805460ff19169091179055505050565b60408051608081018252600080825260208201819052918101829052606081019190915260405162461bcd60e51b815260206004820152603160248201527f756e737570706f72746564207061727365436f6e74726163745570677261646560448201527020696e20776f726d686f6c65206d6f636b60781b606482015260840161081d565b60408051608081018252600080825260208201819052918101829052606081019190915260405162461bcd60e51b815260206004820152602f60248201527f756e737570706f727465642070617273655365744d657373616765466565206960448201526e6e20776f726d686f6c65206d6f636b60881b606482015260840161081d565b60405162461bcd60e51b815260206004820152603260248201527f756e737570706f72746564207375626d6974436f6e74726163745570677261646044820152716520696e20776f726d686f6c65206d6f636b60701b606482015260840161081d565b60405162461bcd60e51b815260206004820152603160248201527f756e737570706f72746564207375626d69744e6577477561726469616e53657460448201527020696e20776f726d686f6c65206d6f636b60781b606482015260840161081d565b60405162461bcd60e51b815260206004820152602560248201527f756e737570706f7274656420766572696679564d20696e20776f726d686f6c65604482015264206d6f636b60d81b606482015260009060609060840161081d565b60405162461bcd60e51b815260206004820152602f60248201527f756e737570706f72746564207375626d69745472616e7366657246656573206960448201526e6e20776f726d686f6c65206d6f636b60881b606482015260840161081d565b60405162461bcd60e51b815260206004820152602d60248201527f756e737570706f72746564207665726966795369676e61747572657320696e2060448201526c776f726d686f6c65206d6f636b60981b606482015260009060609060840161081d565b610c1e611892565b610c288383610eab565b9392505050565b60006002543414610c705760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b604482015260640161081d565b33600090815260208190526040812080546001600160401b031691610c94836121b6565b91906101000a8154816001600160401b0302191690836001600160401b031602179055509050336001600160a01b03167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b282868686604051610cf994939291906121dc565b60405180910390a29392505050565b610d10611892565b60006060610d1e8585610eab565b6101408101516000908152600160209081526040808320548151928301909152918152919760ff90911615965090945092505050565b60408051608081018252600080825260208201819052918101829052606081019190915260405162461bcd60e51b815260206004820152603060248201527f756e737570706f727465642070617273655265636f766572436861696e49642060448201526f696e20776f726d686f6c65206d6f636b60801b606482015260840161081d565b60405162461bcd60e51b815260206004820152603060248201527f756e737570706f72746564207375626d69745365744d6573736167654665652060448201526f696e20776f726d686f6c65206d6f636b60801b606482015260840161081d565b60408051808201909152606081526000602082015260405162461bcd60e51b815260206004820152602b60248201527f756e737570706f7274656420676574477561726469616e53657420696e20776f60448201526a726d686f6c65206d6f636b60a81b606482015260840161081d565b610eb3611892565b600160086020600260048085610ec9828261221e565b610ed3919061221e565b610edd919061221e565b610ee7919061221e565b610ef1919061221e565b610efb919061221e565b610f05919061221e565b610f0f919061221e565b821015610f4d5760405162461bcd60e51b815260206004820152600c60248201526b1d9b481d1bdbc81cdb585b1b60a21b604482015260640161081d565b60606000610f948186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506112fd9050565b60ff168352610fa460018261221e565b9050610fe98186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061135f9050565b63ffffffff1661010084015261100060048261221e565b905061100d8585836113bc565b610120850191909152905061102484828188612231565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a0181900481028201810190925288815293955061109e9385935091508890889081908401838280828437600092019190915250929392505061135f9050565b63ffffffff1660208401526110b460048261221e565b90506110f98186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061135f9050565b63ffffffff16604084015261110f60048261221e565b90506111548186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506117209050565b61ffff16606084015261116860028261221e565b90506111ad8186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061177d9050565b60808401526111bd60208261221e565b90506112028186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506117db9050565b6001600160401b031660a084015261121b60088261221e565b90506112608186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506112fd9050565b60ff1660c084015261127360018261221e565b905061128184828188612231565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505060e084015281516020808401919091206040516112d6920190815260200190565b60408051601f19818403018152919052805160209091012061014084015250909392505050565b600061130a82600161221e565b835110156113505760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161081d565b50818101600101515b92915050565b600061136c82600461221e565b835110156113b35760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b604482015260640161081d565b50016004015190565b60606000806114048487878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506112fd9050565b60ff16905061141460018561221e565b935060016020611424818361221e565b61142e919061221e565b611438919061221e565b611442908261225b565b600160086020600260048085611458828261221e565b611462919061221e565b61146c919061221e565b611476919061221e565b611480919061221e565b61148a919061221e565b611494919061221e565b61149e919061221e565b6114a8919061221e565b8510156114e65760405162461bcd60e51b815260206004820152600c60248201526b1d9b481d1bdbc81cdb585b1b60a21b604482015260640161081d565b806001600160401b038111156114fe576114fe6118ed565b60405190808252806020026020018201604052801561155057816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161151c5790505b50925060005b818110156117135760006115a38689898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506112fd9050565b90506115b060018761221e565b955060006115f7878a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061177d9050565b905061160460208861221e565b9650600061164b888b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061177d9050565b905061165860208961221e565b9750600061169f898c8c8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506112fd9050565b90506116ac60018a61221e565b9850604051806080016040528084815260200183815260200182601b6116d29190612272565b60ff1681526020018560ff168152508886815181106116f3576116f361228b565b6020026020010181905250505050508061170c906122a1565b9050611556565b5083915050935093915050565b600061172d82600261221e565b835110156117745760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b604482015260640161081d565b50016002015190565b600061178a82602061221e565b835110156117d25760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b604482015260640161081d565b50016020015190565b60006117e882600861221e565b8351101561182f5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b604482015260640161081d565b50016008015190565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001611885604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611925576119256118ed565b60405290565b60405161016081016001600160401b0381118282101715611925576119256118ed565b604080519081016001600160401b0381118282101715611925576119256118ed565b604051601f8201601f191681016001600160401b0381118282101715611998576119986118ed565b604052919050565b600082601f8301126119b157600080fd5b81356001600160401b038111156119ca576119ca6118ed565b6119dd601f8201601f1916602001611970565b8181528460208386010111156119f257600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611a2157600080fd5b81356001600160401b03811115611a3757600080fd5b611a43848285016119a0565b949350505050565b805160408084528151908401819052600091602091908201906060860190845b81811015611a905783516001600160a01b031683529284019291840191600101611a6b565b50509382015163ffffffff16949091019390935250919050565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a06080840152611aeb60c0840182611a4b565b905063ffffffff60808501511660a08401528091505092915050565b60008060208385031215611b1a57600080fd5b82356001600160401b0380821115611b3157600080fd5b818501915085601f830112611b4557600080fd5b813581811115611b5457600080fd5b866020828501011115611b6657600080fd5b60209290920196919550909350505050565b600060208284031215611b8a57600080fd5b5035919050565b80356001600160a01b0381168114611ba857600080fd5b919050565b600060208284031215611bbf57600080fd5b610c2882611b91565b803560ff81168114611ba857600080fd5b803563ffffffff81168114611ba857600080fd5b803561ffff81168114611ba857600080fd5b80356001600160401b0381168114611ba857600080fd5b60006001600160401b03821115611c2f57611c2f6118ed565b5060051b60200190565b600082601f830112611c4a57600080fd5b81356020611c5f611c5a83611c16565b611970565b82815260079290921b84018101918181019086841115611c7e57600080fd5b8286015b84811015611cdf5760808189031215611c9b5760008081fd5b611ca3611903565b8135815284820135858201526040611cbc818401611bc8565b908201526060611ccd838201611bc8565b90820152835291830191608001611c82565b509695505050505050565b600060208284031215611cfc57600080fd5b81356001600160401b0380821115611d1357600080fd5b908301906101608286031215611d2857600080fd5b611d3061192b565b611d3983611bc8565b8152611d4760208401611bd9565b6020820152611d5860408401611bd9565b6040820152611d6960608401611bed565b606082015260808301356080820152611d8460a08401611bff565b60a0820152611d9560c08401611bc8565b60c082015260e083013582811115611dac57600080fd5b611db8878286016119a0565b60e083015250610100611dcc818501611bd9565b908201526101208381013583811115611de457600080fd5b611df088828701611c39565b91830191909152506101409283013592810192909252509392505050565b6000815180845260005b81811015611e3457602081850181015186830182015201611e18565b506000602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201526000611a436040830184611e0e565b600080600060608486031215611e8457600080fd5b833592506020808501356001600160401b0380821115611ea357600080fd5b611eaf88838901611c39565b94506040870135915080821115611ec557600080fd5b9086019060408289031215611ed957600080fd5b611ee161194e565b823582811115611ef057600080fd5b83019150601f82018913611f0357600080fd5b8135611f11611c5a82611c16565b81815260059190911b8301850190858101908b831115611f3057600080fd5b938601935b82851015611f5557611f4685611b91565b82529386019390860190611f35565b835250611f659050838501611bd9565b84820152809450505050509250925092565b600081518084526020808501945080840160005b83811015611fd057815180518852838101518489015260408082015160ff908116918a0191909152606091820151169088015260809096019590820190600101611f8b565b509495945050505050565b805160ff16825260006101606020830151611ffe602086018263ffffffff169052565b506040830151612016604086018263ffffffff169052565b50606083015161202c606086018261ffff169052565b506080830151608085015260a083015161205160a08601826001600160401b03169052565b5060c083015161206660c086018260ff169052565b5060e08301518160e086015261207e82860182611e0e565b915050610100808401516120998287018263ffffffff169052565b505061012080840151858303828701526120b38382611f77565b61014095860151969095019590955250919392505050565b602081526000610c286020830184611fdb565b6000806000606084860312156120f357600080fd5b6120fc84611bd9565b925060208401356001600160401b0381111561211757600080fd5b612123868287016119a0565b92505061213260408501611bc8565b90509250925092565b60608152600061214e6060830186611fdb565b841515602084015282810360408401526121688185611e0e565b9695505050505050565b60006020828403121561218457600080fd5b610c2882611bd9565b602081526000610c286020830184611a4b565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038083168181036121d2576121d26121a0565b6001019392505050565b6001600160401b038516815263ffffffff8416602082015260806040820152600061220a6080830185611e0e565b905060ff8316606083015295945050505050565b80820180821115611359576113596121a0565b6000808585111561224157600080fd5b8386111561224e57600080fd5b5050820193919092039150565b8082028115828204841417611359576113596121a0565b60ff8181168382160190811115611359576113596121a0565b634e487b7160e01b600052603260045260246000fd5b6000600182016122b3576122b36121a0565b506001019056fea2646970667358221220811e3a3807eb80bce172178b038d3e5e99dcfec9772966827f42d174f4ee350964736f6c63430008110033";

type MockWormholeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWormholeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWormhole__factory extends ContractFactory {
  constructor(...args: MockWormholeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initChainId: PromiseOrValue<BigNumberish>,
    initEvmChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockWormhole> {
    return super.deploy(
      initChainId,
      initEvmChainId,
      overrides || {}
    ) as Promise<MockWormhole>;
  }
  override getDeployTransaction(
    initChainId: PromiseOrValue<BigNumberish>,
    initEvmChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initChainId,
      initEvmChainId,
      overrides || {}
    );
  }
  override attach(address: string): MockWormhole {
    return super.attach(address) as MockWormhole;
  }
  override connect(signer: Signer): MockWormhole__factory {
    return super.connect(signer) as MockWormhole__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWormholeInterface {
    return new utils.Interface(_abi) as MockWormholeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWormhole {
    return new Contract(address, _abi, signerOrProvider) as MockWormhole;
  }
}
