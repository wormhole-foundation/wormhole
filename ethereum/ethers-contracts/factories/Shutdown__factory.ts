/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Shutdown, ShutdownInterface } from "../Shutdown";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "GuardianSetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGuardianSetIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "getGuardianSet",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct Structs.GuardianSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuardianSetExpiry",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "emitter",
        type: "address",
      },
    ],
    name: "nextSequence",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "parseAndVerifyVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedUpgrade",
        type: "bytes",
      },
    ],
    name: "parseContractUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "newContract",
            type: "address",
          },
        ],
        internalType: "struct GovernanceStructs.ContractUpgrade",
        name: "cu",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedUpgrade",
        type: "bytes",
      },
    ],
    name: "parseGuardianSetUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "keys",
                type: "address[]",
              },
              {
                internalType: "uint32",
                name: "expirationTime",
                type: "uint32",
              },
            ],
            internalType: "struct Structs.GuardianSet",
            name: "newGuardianSet",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "newGuardianSetIndex",
            type: "uint32",
          },
        ],
        internalType: "struct GovernanceStructs.GuardianSetUpgrade",
        name: "gsu",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedRecoverChainId",
        type: "bytes",
      },
    ],
    name: "parseRecoverChainId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "evmChainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "newChainId",
            type: "uint16",
          },
        ],
        internalType: "struct GovernanceStructs.RecoverChainId",
        name: "rci",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSetMessageFee",
        type: "bytes",
      },
    ],
    name: "parseSetMessageFee",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "messageFee",
            type: "uint256",
          },
        ],
        internalType: "struct GovernanceStructs.SetMessageFee",
        name: "smf",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedTransferFees",
        type: "bytes",
      },
    ],
    name: "parseTransferFees",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "recipient",
            type: "bytes32",
          },
        ],
        internalType: "struct GovernanceStructs.TransferFees",
        name: "tf",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "parseVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numGuardians",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "numSignaturesRequiredForQuorum",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitContractUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitNewGuardianSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitRecoverChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitSetMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitTransferFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "guardianIndex",
            type: "uint8",
          },
        ],
        internalType: "struct Structs.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct Structs.GuardianSet",
        name: "guardianSet",
        type: "tuple",
      },
    ],
    name: "verifySignatures",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    name: "verifyVM",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061321a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806393df337e116100f9578063d60b347f11610097578063f42bc64111610071578063f42bc6411461052d578063f8ce560a14610540578063f951975a14610553578063fbe3c2cd1461057357600080fd5b8063d60b347f146104e3578063e039f2241461050f578063eb8d3f121461051757600080fd5b8063a9e11893116100d3578063a9e118931461044c578063b172b2221461046c578063c0fd8bde14610474578063cb4cfea81461049657600080fd5b806393df337e1461040b5780639a8a05921461041e578063a0cce1b31461043957600080fd5b80634fdc60fa1161016657806364d42b171161014057806364d42b17146103c75780636606b4e0146103cf5780638129fc1c146103e2578063875be02a146103ea57600080fd5b80634fdc60fa14610311578063515f3247146103675780635cb8cae2146103b457600080fd5b80631a90a219116101a25780631a90a219146102635780631cfe7951146102755780632c3c02a4146102945780634cf842b5146102c757600080fd5b80630319e59c146101c957806304ca84cf1461022e578063178149e71461024e575b600080fd5b6101dc6101d736600461289c565b610585565b6040516102259190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b61024161023c36600461289c565b6106e0565b6040516102259190612937565b61026161025c36600461289c565b6108f7565b005b6007545b604051908152602001610225565b60035463ffffffff165b60405163ffffffff9091168152602001610225565b6102b76102a2366004612994565b60009081526005602052604090205460ff1690565b6040519015158152602001610225565b6102f96102d53660046129c9565b6001600160a01b03166000908152600460205260409020546001600160401b031690565b6040516001600160401b039091168152602001610225565b61032461031f36600461289c565b610a30565b60405161022591908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b61037a61037536600461289c565b610b6c565b60405161022591908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b6102616103c236600461289c565b610c9b565b600854610267565b6102616103dd36600461289c565b610de0565b610261610ff0565b6103fd6103f8366004612b0d565b611050565b604051610225929190612c81565b61026161041936600461289c565b611069565b60005461ffff165b60405161ffff9091168152602001610225565b6103fd610447366004612c9c565b6111a5565b61045f61045a36600461289c565b611420565b6040516102259190612ef8565b600154610267565b610487610482366004612f0b565b6117b8565b60405161022593929190612f7c565b6104a96104a436600461289c565b61181c565b60405161022591908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b6102b76104f13660046129c9565b6001600160a01b031660009081526006602052604090205460ff1690565b6102b761194d565b600354640100000000900463ffffffff1661027f565b61026161053b36600461289c565b611960565b61026761054e366004612994565b611a72565b610566610561366004612fb3565b611ae2565b6040516102259190612fce565b60005462010000900461ffff16610426565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906105ba8382611b81565b82526105c7602082612ff7565b90506105d38382611bdf565b60ff1660208301526105e6600182612ff7565b9050816020015160ff1660041461063b5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201526064015b60405180910390fd5b6106458382611c3b565b61ffff166040830152610659600282612ff7565b90506106658382611c98565b6060830152610675602082612ff7565b90506106818382611b81565b6080830152610691602082612ff7565b9050808351146106da5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b6044820152606401610632565b50919050565b6106e861264b565b60006106f48382611b81565b8252610701602082612ff7565b905061070d8382611bdf565b60ff166020830152610720600182612ff7565b9050816020015160ff166002146107795760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606401610632565b6107838382611c3b565b61ffff166040830152610797600282612ff7565b90506107a38382611ced565b63ffffffff1660808301526107b9600482612ff7565b905060006107c78483611bdf565b90506107d4600183612ff7565b915060405180604001604052808260ff166001600160401b038111156107fc576107fc61277a565b604051908082528060200260200182016040528015610825578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff1681101561089f576108508584611d4a565b6060850151518051839081106108685761086861300a565b6001600160a01b039092166020928302919091019091015261088b601484612ff7565b92508061089781613020565b91505061083b565b50818451146108f05760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606401610632565b5050919050565b6108ff61194d565b6109385760405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b6044820152606401610632565b600061094382611420565b905060008061095183611daf565b915091508181906109755760405162461bcd60e51b81526004016106329190613039565b5060006109858460e0015161181c565b805190915063436f7265146109ac5760405162461bcd60e51b81526004016106329061304c565b468160400151146109f35760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b6044820152606401610632565b610a01846101400151611f25565b610a0e8160400151611f40565b60608101516000805461ffff191661ffff9092169190911790555b5050505050565b604080516080810182526000808252602082018190529181018290526060810182905290610a5e8382611b81565b8252610a6b602082612ff7565b9050610a778382611bdf565b60ff166020830152610a8a600182612ff7565b9050816020015160ff16600114610add5760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b6044820152606401610632565b610ae78382611c3b565b61ffff166040830152610afb600282612ff7565b9050610b078382611b81565b6001600160a01b03166060830152610b20602082612ff7565b9050808351146106da5760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b6044820152606401610632565b604080516080810182526000808252602082018190529181018290526060810182905290610b9a8382611b81565b8252610ba7602082612ff7565b9050610bb38382611bdf565b60ff166020830152610bc6600182612ff7565b9050816020015160ff16600314610c175760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606401610632565b610c218382611c3b565b61ffff166040830152610c35600282612ff7565b9050610c418382611c98565b6060830152610c51602082612ff7565b9050808351146106da5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606401610632565b610ca361194d565b15610cdf5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b6044820152606401610632565b6000610cea82611420565b9050600080610cf883611daf565b91509150818190610d1c5760405162461bcd60e51b81526004016106329190613039565b506000610d2c8460e00151610a30565b805190915063436f726514610d745760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b6044820152606401610632565b60005461ffff1661ffff16816040015161ffff1614610dc55760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b6044820152606401610632565b610dd3846101400151611f25565b610a298160600151611f89565b6000610deb82611420565b9050600080610df983611daf565b91509150818190610e1d5760405162461bcd60e51b81526004016106329190613039565b506000610e2d8460e001516106e0565b805190915063436f726514610e545760405162461bcd60e51b81526004016106329061304c565b60005461ffff1661ffff16816040015161ffff16148015610e7a5750610e7861194d565b155b80610e8b5750604081015161ffff16155b610ec75760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b6044820152606401610632565b60608101515151610f1a5760405162461bcd60e51b815260206004820152601960248201527f6e657720677561726469616e2073657420697320656d707479000000000000006044820152606401610632565b60035463ffffffff16610f2e906001613074565b63ffffffff16816080015163ffffffff1614610f965760405162461bcd60e51b815260206004820152602160248201527f696e646578206d75737420696e63726561736520696e207374657073206f66206044820152603160f81b6064820152608401610632565b610fa4846101400151611f25565b610fbb610fb660035463ffffffff1690565b6120b6565b610fcd816060015182608001516120ee565b60808101516003805463ffffffff191663ffffffff909216919091179055610a29565b60006110237f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905061104d816001600160a01b03166000908152600660205260409020805460ff19166001179055565b50565b6000606061105f8360016121c8565b9094909350915050565b600061107482611420565b905060008061108283611daf565b915091508181906110a65760405162461bcd60e51b81526004016106329190613039565b5060006110b68460e00151610585565b805190915063436f7265146110dd5760405162461bcd60e51b81526004016106329061304c565b60005461ffff1661ffff16816040015161ffff16148015611103575061110161194d565b155b806111145750604081015161ffff16155b6111505760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b6044820152606401610632565b61115e846101400151611f25565b608081015160608201516040516001600160a01b0383169180156108fc02916000818181858888f1935050505015801561119c573d6000803e3d6000fd5b50505050505050565b8051516000906060908290815b86518110156113fe5760008782815181106111cf576111cf61300a565b60200260200101519050600060018a83604001518460000151856020015160405160008152602001604052604051611223949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611245573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112a85760405162461bcd60e51b815260206004820152601f60248201527f65637265636f766572206661696c65642077697468207369676e6174757265006044820152606401610632565b8215806112be57508460ff16826060015160ff16115b6113165760405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b6064820152608401610632565b6060820151945060ff8516841161136f5760405162461bcd60e51b815260206004820152601c60248201527f677561726469616e20696e646578206f7574206f6620626f756e6473000000006044820152606401610632565b8760000151826060015160ff168151811061138c5761138c61300a565b60200260200101516001600160a01b0316816001600160a01b0316146113e9576000604051806040016040528060148152602001731593481cda59db985d1d5c99481a5b9d985b1a5960621b815250965096505050505050611418565b505080806113f690613020565b9150506111b2565b506001604051806020016040528060008152509350935050505b935093915050565b6114286126a5565b60006114348382611bdf565b60ff168252611444600182612ff7565b9050816000015160ff1660011461149d5760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c650000000000000000006044820152606401610632565b6114a78382611ced565b63ffffffff166101008301526114be600482612ff7565b905060006114cc8483611bdf565b60ff1690506114dc600183612ff7565b9150806001600160401b038111156114f6576114f661277a565b60405190808252806020026020018201604052801561154857816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816115145790505b5061012084015260005b8181101561167f576115648584611bdf565b846101200151828151811061157b5761157b61300a565b602090810291909101015160ff90911660609091015261159c600184612ff7565b92506115a88584611b81565b84610120015182815181106115bf576115bf61300a565b602002602001015160000181815250506020836115dc9190612ff7565b92506115e88584611b81565b84610120015182815181106115ff576115ff61300a565b6020026020010151602001818152505060208361161c9190612ff7565b92506116288584611bdf565b61163390601b613098565b846101200151828151811061164a5761164a61300a565b602090810291909101015160ff90911660409091015261166b600184612ff7565b92508061167781613020565b915050611552565b50600061169b8384875161169391906130b1565b8791906123fc565b905080805190602001206040516020016116b791815260200190565b60408051601f1981840301815291905280516020909101206101408501526116df8584611ced565b63ffffffff1660208501526116f5600484612ff7565b92506117018584611ced565b63ffffffff166040850152611717600484612ff7565b92506117238584611c3b565b61ffff166060850152611737600284612ff7565b92506117438584611b81565b6080850152611753602084612ff7565b925061175f8584612509565b6001600160401b031660a0850152611778600884612ff7565b92506117848584611bdf565b60ff1660c0850152611797600184612ff7565b92506117aa8384875161169391906130b1565b60e085015250919392505050565b6117c06126a5565b6000606061180385858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061142092505050565b92506118108360006121c8565b93969095509293505050565b60408051608081018252600080825260208201819052918101829052606081018290529061184a8382611b81565b8252611857602082612ff7565b90506118638382611bdf565b60ff166020830152611876600182612ff7565b9050816020015160ff166005146118c85760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606401610632565b6118d28382611c98565b60408301526118e2602082612ff7565b90506118ee8382611c3b565b61ffff166060830152611902600282612ff7565b9050808351146106da5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606401610632565b60004661195960085490565b1415905090565b600061196b82611420565b905060008061197983611daf565b9150915081819061199d5760405162461bcd60e51b81526004016106329190613039565b5060006119ad8460e00151610b6c565b805190915063436f7265146119f55760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b6044820152606401610632565b60005461ffff1661ffff16816040015161ffff16148015611a1b5750611a1961194d565b155b611a575760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b6044820152606401610632565b611a65846101400151611f25565b610a298160600151600755565b60006101008210611aba5760405162461bcd60e51b8152602060048201526012602482015271746f6f206d616e7920677561726469616e7360701b6044820152606401610632565b6003611ac78360026130c4565b611ad191906130db565b611adc906001612ff7565b92915050565b60408051808201825260608082526000602080840182905263ffffffff86168252600281529084902084518154928302810184018652948501828152939493909284928491840182828015611b6057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b42575b50505091835250506001919091015463ffffffff1660209091015292915050565b6000611b8e826020612ff7565b83511015611bd65760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610632565b50016020015190565b6000611bec826001612ff7565b83511015611c325760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610632565b50016001015190565b6000611c48826002612ff7565b83511015611c8f5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606401610632565b50016002015190565b6000611ca5826020612ff7565b83511015611bd65760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610632565b6000611cfa826004612ff7565b83511015611d415760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606401610632565b50016004015190565b6000611d57826014612ff7565b83511015611d9f5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606401610632565b500160200151600160601b900490565b60006060600080611dbf85611050565b9150915081611dd45760009590945092505050565b60035463ffffffff1663ffffffff1685610100015163ffffffff1614611e1a5760006040518060600160405280602281526020016131a160229139935093505050915091565b60005462010000900461ffff1661ffff16856060015161ffff1614611e75576000604051806040016040528060168152602001753bb937b7339033b7bb32b93730b731b29031b430b4b760511b815250935093505050915091565b600154856080015114611ec55760006040518060400160405280601981526020017f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000815250935093505050915091565b61014085015160009081526005602052604090205460ff1615611f085760006040518060600160405280602281526020016131c360229139935093505050915091565b600160405180602001604052806000815250935093505050915091565b6000908152600560205260409020805460ff19166001179055565b468114611f845760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606401610632565b600855565b6000611fbc7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050611fc782612566565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b0386169161200a916130fd565b600060405180830381855af49150503d8060008114612045576040519150601f19603f3d011682016040523d82523d6000602084013e61204a565b606091505b509150915081819061206f5760405162461bcd60e51b81526004016106329190613039565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b6120c34262015180613074565b63ffffffff9182166000908152600260205260409020600101805463ffffffff191691909216179055565b81515160005b81811015612172578351805160009190839081106121145761211461300a565b60200260200101516001600160a01b0316036121605760405162461bcd60e51b815260206004820152600b60248201526a496e76616c6964206b657960a81b6044820152606401610632565b8061216a81613020565b9150506120f4565b5063ffffffff8216600090815260026020908152604090912084518051869361219f928492910190612700565b50602091909101516001909101805463ffffffff191663ffffffff909216919091179055505050565b6000606060006121dc856101000151611ae2565b905083156122b257602080860151604080880151606089015160808a015160a08b015160c08c015160e08d0151955160009861221a98979101613119565b60405160208183030381529060405290506000818051906020012060405160200161224791815260200190565b60405160208183030381529060405280519060200120905086610140015181146122af5760006040518060400160405280601a81526020017f766d2e6861736820646f65736e2774206d6174636820626f6479000000000000815250945094505050506123f5565b50505b8051516000036122f25750506040805180820190915260148152731a5b9d985b1a590819dd585c991a585b881cd95d60621b6020820152600091506123f5565b60035463ffffffff1663ffffffff1685610100015163ffffffff1614158015612324575042816020015163ffffffff16105b1561236857505060408051808201909152601881527f677561726469616e2073657420686173206578706972656400000000000000006020820152600091506123f5565b80515161237490611a72565b8561012001515110156123ac5750506040805180820190915260098152686e6f2071756f72756d60b81b6020820152600091506123f5565b6000806123c4876101400151886101200151856111a5565b91509150816123db576000945092506123f5915050565b600160405180602001604052806000815250945094505050505b9250929050565b60608161240a81601f612ff7565b10156124495760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610632565b6124538284612ff7565b845110156124975760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610632565b6060821580156124b65760405191506000825260208201604052612500565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156124ef5780518352602092830192016124d7565b5050858452601f01601f1916604052505b50949350505050565b6000612516826008612ff7565b8351101561255d5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606401610632565b50016008015190565b61256f816125a6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b61260a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610632565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001612698604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b828054828255906000526020600020908101928215612755579160200282015b8281111561275557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612720565b50612761929150612765565b5090565b5b808211156127615760008155600101612766565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156127b2576127b261277a565b60405290565b60405161016081016001600160401b03811182821017156127b2576127b261277a565b604080519081016001600160401b03811182821017156127b2576127b261277a565b604051601f8201601f191681016001600160401b03811182821017156128255761282561277a565b604052919050565b600082601f83011261283e57600080fd5b81356001600160401b038111156128575761285761277a565b61286a601f8201601f19166020016127fd565b81815284602083860101111561287f57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156128ae57600080fd5b81356001600160401b038111156128c457600080fd5b6128d08482850161282d565b949350505050565b805160408084528151908401819052600091602091908201906060860190845b8181101561291d5783516001600160a01b0316835292840192918401916001016128f8565b50509382015163ffffffff16949091019390935250919050565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a0608084015261297860c08401826128d8565b905063ffffffff60808501511660a08401528091505092915050565b6000602082840312156129a657600080fd5b5035919050565b80356001600160a01b03811681146129c457600080fd5b919050565b6000602082840312156129db57600080fd5b6129e4826129ad565b9392505050565b803560ff811681146129c457600080fd5b803563ffffffff811681146129c457600080fd5b803561ffff811681146129c457600080fd5b80356001600160401b03811681146129c457600080fd5b60006001600160401b03821115612a5257612a5261277a565b5060051b60200190565b600082601f830112612a6d57600080fd5b81356020612a82612a7d83612a39565b6127fd565b82815260079290921b84018101918181019086841115612aa157600080fd5b8286015b84811015612b025760808189031215612abe5760008081fd5b612ac6612790565b8135815284820135858201526040612adf8184016129eb565b908201526060612af08382016129eb565b90820152835291830191608001612aa5565b509695505050505050565b600060208284031215612b1f57600080fd5b81356001600160401b0380821115612b3657600080fd5b908301906101608286031215612b4b57600080fd5b612b536127b8565b612b5c836129eb565b8152612b6a602084016129fc565b6020820152612b7b604084016129fc565b6040820152612b8c60608401612a10565b606082015260808301356080820152612ba760a08401612a22565b60a0820152612bb860c084016129eb565b60c082015260e083013582811115612bcf57600080fd5b612bdb8782860161282d565b60e083015250610100612bef8185016129fc565b908201526101208381013583811115612c0757600080fd5b612c1388828701612a5c565b91830191909152506101409283013592810192909252509392505050565b60005b83811015612c4c578181015183820152602001612c34565b50506000910152565b60008151808452612c6d816020860160208601612c31565b601f01601f19169290920160200192915050565b82151581526040602082015260006128d06040830184612c55565b600080600060608486031215612cb157600080fd5b833592506020808501356001600160401b0380821115612cd057600080fd5b612cdc88838901612a5c565b94506040870135915080821115612cf257600080fd5b9086019060408289031215612d0657600080fd5b612d0e6127db565b823582811115612d1d57600080fd5b83019150601f82018913612d3057600080fd5b8135612d3e612a7d82612a39565b81815260059190911b8301850190858101908b831115612d5d57600080fd5b938601935b82851015612d8257612d73856129ad565b82529386019390860190612d62565b835250612d9290508385016129fc565b84820152809450505050509250925092565b600081518084526020808501945080840160005b83811015612dfd57815180518852838101518489015260408082015160ff908116918a0191909152606091820151169088015260809096019590820190600101612db8565b509495945050505050565b805160ff16825260006101606020830151612e2b602086018263ffffffff169052565b506040830151612e43604086018263ffffffff169052565b506060830151612e59606086018261ffff169052565b506080830151608085015260a0830151612e7e60a08601826001600160401b03169052565b5060c0830151612e9360c086018260ff169052565b5060e08301518160e0860152612eab82860182612c55565b91505061010080840151612ec68287018263ffffffff169052565b50506101208084015185830382870152612ee08382612da4565b61014095860151969095019590955250919392505050565b6020815260006129e46020830184612e08565b60008060208385031215612f1e57600080fd5b82356001600160401b0380821115612f3557600080fd5b818501915085601f830112612f4957600080fd5b813581811115612f5857600080fd5b866020828501011115612f6a57600080fd5b60209290920196919550909350505050565b606081526000612f8f6060830186612e08565b84151560208401528281036040840152612fa98185612c55565b9695505050505050565b600060208284031215612fc557600080fd5b6129e4826129fc565b6020815260006129e460208301846128d8565b634e487b7160e01b600052601160045260246000fd5b80820180821115611adc57611adc612fe1565b634e487b7160e01b600052603260045260246000fd5b60006001820161303257613032612fe1565b5060010190565b6020815260006129e46020830184612c55565b6020808252600e908201526d696e76616c6964204d6f64756c6560901b604082015260600190565b63ffffffff81811683821601908082111561309157613091612fe1565b5092915050565b60ff8181168382160190811115611adc57611adc612fe1565b81810381811115611adc57611adc612fe1565b8082028115828204841417611adc57611adc612fe1565b6000826130f857634e487b7160e01b600052601260045260246000fd5b500490565b6000825161310f818460208701612c31565b9190910192915050565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b166032820152815160009061318d816033850160208701612c31565b919091016033019897505050505050505056fe6e6f74207369676e65642062792063757272656e7420677561726469616e20736574676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a26469706673582212203bb14e16d4de356603cc347863b57d49111f9b89c2768f90c564c334631b89e564736f6c63430008110033";

type ShutdownConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShutdownConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shutdown__factory extends ContractFactory {
  constructor(...args: ShutdownConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shutdown> {
    return super.deploy(overrides || {}) as Promise<Shutdown>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shutdown {
    return super.attach(address) as Shutdown;
  }
  override connect(signer: Signer): Shutdown__factory {
    return super.connect(signer) as Shutdown__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShutdownInterface {
    return new utils.Interface(_abi) as ShutdownInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Shutdown {
    return new Contract(address, _abi, signerOrProvider) as Shutdown;
  }
}
