/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeToken,
  FeeTokenInterface,
} from "../../MockFeeToken.sol/FeeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue_",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue_",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "nativeContract_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
    ],
    name: "updateDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637ecebe00116100ad578063a18cd7c611610071578063a18cd7c614610264578063a457c2d714610277578063a9059cbb1461028a578063c71f46151461029d578063dd62ed3e146102b057600080fd5b80637ecebe00146101fa5780638da5cb5b1461020d57806395d89b41146102285780639a8a0592146102305780639dc29fac1461025157600080fd5b8063313ce567116100f4578063313ce5671461018c57806339509351146101a15780633d6c043b146101b457806340c10f19146101bc57806370a08231146101d157600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102e9565b60405161013b9190610ce6565b60405180910390f35b610157610152366004610d50565b610312565b604051901515815260200161013b565b6003545b60405190815260200161013b565b610157610187366004610d7a565b610329565b60045460405160ff909116815260200161013b565b6101576101af366004610d50565b6103df565b60085461016b565b6101cf6101ca366004610d50565b610416565b005b61016b6101df366004610db6565b6001600160a01b031660009081526005602052604090205490565b61016b610208366004610db6565b61044e565b6007546040516001600160a01b03909116815260200161013b565b61012e61046c565b600754600160a81b900461ffff1660405161ffff909116815260200161013b565b6101cf61025f366004610d50565b610501565b6101cf610272366004610e93565b610535565b610157610285366004610d50565b6105fd565b610157610298366004610d50565b610698565b6101cf6102ab366004610f07565b6106a5565b61016b6102be366004610fca565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6040516060906102fe90600090602001611037565b604051602081830303815290604052905090565b600061031f338484610796565b5060015b92915050565b60006103368484846108bb565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156103c05760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103d485336103cf86856110d6565b610796565b506001949350505050565b3360008181526006602090815260408083206001600160a01b0387168452909152812054909161031f9185906103cf9086906110e9565b6007546001600160a01b031633146104405760405162461bcd60e51b81526004016103b7906110fc565b61044a8282610ab5565b5050565b6001600160a01b0381166000908152600e6020526040812054610323565b60606000600101805461047e90610ffd565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90610ffd565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b5050505050905090565b6007546001600160a01b0316331461052b5760405162461bcd60e51b81526004016103b7906110fc565b61044a8282610b97565b6007546001600160a01b0316331461055f5760405162461bcd60e51b81526004016103b7906110fc565b60025467ffffffffffffffff8083169116106105bd5760405162461bcd60e51b815260206004820152601e60248201527f63757272656e74206d6574616461746120697320757020746f2064617465000060448201526064016103b7565b60006105c98482611182565b5060016105d68382611182565b506002805467ffffffffffffffff191667ffffffffffffffff929092169190911790555050565b3360009081526006602090815260408083206001600160a01b03861684529091528120548281101561067f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b7565b61068e33856103cf86856110d6565b5060019392505050565b600061031f3384846108bb565b600754600160a01b900460ff16156106f55760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016103b7565b6007805460ff60a01b1916600160a01b17905560006107148882611182565b5060016107218782611182565b506004805460ff90961660ff19909616959095179094556002805467ffffffffffffffff90941667ffffffffffffffff19909416939093179092556007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b03909216919091179190911790556008555050565b6001600160a01b0383166107f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b7565b6001600160a01b0382166108595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b7565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661091f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b7565b6001600160a01b0382166109815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b7565b6001600160a01b038316600090815260056020526040902054818110156109f95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b7565b610a0382826110d6565b6001600160a01b038516600090815260056020526040902055600a610a29836009611242565b610a339190611259565b6001600160a01b03841660009081526005602052604081208054909190610a5b9084906110e9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa791815260200190565b60405180910390a350505050565b6001600160a01b038216610b0b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b7565b8060006003016000828254610b2091906110e9565b90915550506001600160a01b03821660009081526005602052604081208054839290610b4d9084906110e9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610bf75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103b7565b6001600160a01b03821660009081526005602052604090205481811015610c6b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103b7565b610c7582826110d6565b6001600160a01b03841660009081526005602052604081209190915560038054849290610ca39084906110d6565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108ae565b600060208083528351808285015260005b81811015610d1357858101830151858201604001528201610cf7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610d4b57600080fd5b919050565b60008060408385031215610d6357600080fd5b610d6c83610d34565b946020939093013593505050565b600080600060608486031215610d8f57600080fd5b610d9884610d34565b9250610da660208501610d34565b9150604084013590509250925092565b600060208284031215610dc857600080fd5b610dd182610d34565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610dff57600080fd5b813567ffffffffffffffff80821115610e1a57610e1a610dd8565b604051601f8301601f19908116603f01168101908282118183101715610e4257610e42610dd8565b81604052838152866020858801011115610e5b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803567ffffffffffffffff81168114610d4b57600080fd5b600080600060608486031215610ea857600080fd5b833567ffffffffffffffff80821115610ec057600080fd5b610ecc87838801610dee565b94506020860135915080821115610ee257600080fd5b50610eef86828701610dee565b925050610efe60408501610e7b565b90509250925092565b600080600080600080600060e0888a031215610f2257600080fd5b873567ffffffffffffffff80821115610f3a57600080fd5b610f468b838c01610dee565b985060208a0135915080821115610f5c57600080fd5b50610f698a828b01610dee565b965050604088013560ff81168114610f8057600080fd5b9450610f8e60608901610e7b565b9350610f9c60808901610d34565b925060a088013561ffff81168114610fb357600080fd5b8092505060c0880135905092959891949750929550565b60008060408385031215610fdd57600080fd5b610fe683610d34565b9150610ff460208401610d34565b90509250929050565b600181811c9082168061101157607f821691505b60208210810361103157634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461104581610ffd565b6001828116801561105d5760018114611072576110a1565b60ff19841687528215158302870194506110a1565b8760005260208060002060005b858110156110985781548a82015290840190820161107f565b50505082870194505b50506a2028576f726d686f6c652960a81b83525050600b019392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610323576103236110c0565b80820180821115610323576103236110c0565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b601f82111561117d57600081815260208120601f850160051c8101602086101561115a5750805b601f850160051c820191505b8181101561117957828155600101611166565b5050505b505050565b815167ffffffffffffffff81111561119c5761119c610dd8565b6111b0816111aa8454610ffd565b84611133565b602080601f8311600181146111e557600084156111cd5750858301515b600019600386901b1c1916600185901b178555611179565b600085815260208120601f198616915b82811015611214578886015182559484019460019091019084016111f5565b50858210156112325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417610323576103236110c0565b60008261127657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206e96a3906013348de79d36d7800bedfbff930ab52ea72ff001539139c974a5de64736f6c63430008110033";

type FeeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeToken__factory extends ContractFactory {
  constructor(...args: FeeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeToken> {
    return super.deploy(overrides || {}) as Promise<FeeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeToken {
    return super.attach(address) as FeeToken;
  }
  override connect(signer: Signer): FeeToken__factory {
    return super.connect(signer) as FeeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeTokenInterface {
    return new utils.Interface(_abi) as FeeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeToken {
    return new Contract(address, _abi, signerOrProvider) as FeeToken;
  }
}
