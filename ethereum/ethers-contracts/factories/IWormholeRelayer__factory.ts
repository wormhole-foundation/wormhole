/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWormholeRelayer,
  IWormholeRelayerInterface,
} from "../IWormholeRelayer";

const _abi = [
  {
    inputs: [],
    name: "ForwardRequestFromWrongAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "multisendIndex",
        type: "uint8",
      },
    ],
    name: "FundsTooMuch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "multisendIndex",
        type: "uint8",
      },
    ],
    name: "MaxTransactionFeeNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "MsgValueTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "MultichainSendEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "MultipleForwardsRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "NoDeliveryInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayProviderDoesNotSupportTargetChain",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "targetAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "refundAddress",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxTransactionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IWormholeRelayer.MessageInfoType",
            name: "infoType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "vaaHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormholeRelayer.MessageInfo[]",
        name: "messages",
        type: "tuple[]",
      },
    ],
    name: "forward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "targetChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "targetAddress",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundAddress",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "maxTransactionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiverValue",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "relayParameters",
            type: "bytes",
          },
        ],
        internalType: "struct IWormholeRelayer.Send",
        name: "request",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IWormholeRelayer.MessageInfoType",
            name: "infoType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "vaaHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormholeRelayer.MessageInfo[]",
        name: "messages",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    name: "forward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "whFormatAddress",
        type: "bytes32",
      },
    ],
    name: "fromWormholeFormat",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultRelayParams",
    outputs: [
      {
        internalType: "bytes",
        name: "relayParams",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultRelayProvider",
    outputs: [
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "relayProviderAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum IWormholeRelayer.MessageInfoType",
                name: "infoType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "emitterAddress",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "vaaHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IWormholeRelayer.MessageInfo[]",
            name: "messages",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
              },
              {
                internalType: "bytes32",
                name: "targetAddress",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "refundAddress",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "maxTransactionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "receiverValue",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "relayParameters",
                type: "bytes",
              },
            ],
            internalType: "struct IWormholeRelayer.Send[]",
            name: "requests",
            type: "tuple[]",
          },
        ],
        internalType: "struct IWormholeRelayer.MultichainSend",
        name: "sendContainer",
        type: "tuple",
      },
    ],
    name: "multichainForward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "relayProviderAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum IWormholeRelayer.MessageInfoType",
                name: "infoType",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "emitterAddress",
                type: "bytes32",
              },
              {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "vaaHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IWormholeRelayer.MessageInfo[]",
            name: "messages",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
              },
              {
                internalType: "bytes32",
                name: "targetAddress",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "refundAddress",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "maxTransactionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "receiverValue",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "relayParameters",
                type: "bytes",
              },
            ],
            internalType: "struct IWormholeRelayer.Send[]",
            name: "requests",
            type: "tuple[]",
          },
        ],
        internalType: "struct IWormholeRelayer.MultichainSend",
        name: "sendContainer",
        type: "tuple",
      },
    ],
    name: "multichainSend",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    name: "quoteGas",
    outputs: [
      {
        internalType: "uint256",
        name: "maxTransactionFee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    name: "quoteGasResend",
    outputs: [
      {
        internalType: "uint256",
        name: "maxTransactionFee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "targetAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    name: "quoteReceiverValue",
    outputs: [
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "sourceChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "sourceTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "deliveryVAASequence",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "targetChain",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "multisendIndex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "newMaxTransactionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newReceiverValue",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "newRelayParameters",
            type: "bytes",
          },
        ],
        internalType: "struct IWormholeRelayer.ResendByTx",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    name: "resend",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "targetAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "refundAddress",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxTransactionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IWormholeRelayer.MessageInfoType",
            name: "infoType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "vaaHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormholeRelayer.MessageInfo[]",
        name: "messages",
        type: "tuple[]",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "targetChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "targetAddress",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundAddress",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "maxTransactionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiverValue",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "relayParameters",
            type: "bytes",
          },
        ],
        internalType: "struct IWormholeRelayer.Send",
        name: "request",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IWormholeRelayer.MessageInfoType",
            name: "infoType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "vaaHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormholeRelayer.MessageInfo[]",
        name: "messages",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "relayProvider",
        type: "address",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "toWormholeFormat",
    outputs: [
      {
        internalType: "bytes32",
        name: "whFormat",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IWormholeRelayer__factory {
  static readonly abi = _abi;
  static createInterface(): IWormholeRelayerInterface {
    return new utils.Interface(_abi) as IWormholeRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWormholeRelayer {
    return new Contract(address, _abi, signerOrProvider) as IWormholeRelayer;
  }
}
