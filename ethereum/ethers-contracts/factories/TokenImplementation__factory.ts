/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TokenImplementation,
  TokenImplementationInterface,
} from "../TokenImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue_",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "domainFields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "domainName",
        type: "string",
      },
      {
        internalType: "string",
        name: "domainVersion",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "domainChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "domainVerifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "domainSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "domainExtensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue_",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "nativeContract_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v_",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s_",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
    ],
    name: "updateDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a38806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806384b0196e116100b8578063a18cd7c61161007c578063a18cd7c6146102a8578063a457c2d7146102bb578063a9059cbb146102ce578063c71f4615146102e1578063d505accf146102f4578063dd62ed3e1461030757600080fd5b806384b0196e146102365780638da5cb5b1461025157806395d89b411461026c5780639a8a0592146102745780639dc29fac1461029557600080fd5b80633644e5151161010a5780633644e515146101c257806339509351146101ca5780633d6c043b146101dd57806340c10f19146101e557806370a08231146101fa5780637ecebe001461022357600080fd5b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018857806323b872dd1461019a578063313ce567146101ad575b600080fd5b61014f610340565b60405161015c9190611436565b60405180910390f35b61017861017336600461146c565b6103d4565b604051901515815260200161015c565b6003545b60405190815260200161015c565b6101786101a8366004611496565b6103eb565b60045460405160ff909116815260200161015c565b61018c6104a1565b6101786101d836600461146c565b6104b0565b60085461018c565b6101f86101f336600461146c565b6104e7565b005b61018c6102083660046114d2565b6001600160a01b031660009081526005602052604090205490565b61018c6102313660046114d2565b61051f565b61023e61053d565b60405161015c97969594939291906114ed565b6007546040516001600160a01b03909116815260200161015c565b61014f61059b565b600754600160a81b900461ffff1660405161ffff909116815260200161015c565b6101f86102a336600461146c565b6105ad565b6101f86102b636600461163e565b6105e1565b6101786102c936600461146c565b6106ad565b6101786102dc36600461146c565b610748565b6101f86102ef3660046116c3565b610755565b6101f861030236600461177e565b6107d8565b61018c6103153660046117e8565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b60606000800180546103519061181b565b80601f016020809104026020016040519081016040528092919081815260200182805461037d9061181b565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b5050505050905090565b60006103e1338484610944565b5060015b92915050565b60006103f8848484610a69565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156104825760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61049685336104918685611865565b610944565b506001949350505050565b60006104ab610c41565b905090565b3360008181526006602090815260408083206001600160a01b038716845290915281205490916103e1918590610491908690611878565b6007546001600160a01b031633146105115760405162461bcd60e51b81526004016104799061188b565b61051b8282610c83565b5050565b6001600160a01b0381166000908152600e60205260408120546103e5565b600060608060008060006060610551610340565b6040805180820190915260018152603160f81b60208201524630610573610d65565b604080516000815260208101909152601f60f81b9d959c50939a509198509650945092509050565b6060600060010180546103519061181b565b6007546001600160a01b031633146105d75760405162461bcd60e51b81526004016104799061188b565b61051b8282610daf565b6007546001600160a01b0316331461060b5760405162461bcd60e51b81526004016104799061188b565b60025467ffffffffffffffff8083169116106106695760405162461bcd60e51b815260206004820152601e60248201527f63757272656e74206d6574616461746120697320757020746f206461746500006044820152606401610479565b60006106758482611910565b5060016106828382611910565b506002805467ffffffffffffffff191667ffffffffffffffff83161790556106a8610efe565b505050565b3360009081526006602090815260408083206001600160a01b03861684529091528120548281101561072f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610479565b61073e33856104918685611865565b5060019392505050565b60006103e1338484610a69565b600754600160a01b900460ff16156107a55760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610479565b6007805460ff60a01b1916600160a01b1790556107c787878787878787610f5a565b6107cf610efe565b50505050505050565b6107e0610efe565b834211156108305760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610479565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861085f8c610fe8565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108ba82611010565b905060006108ca82878787611023565b9050896001600160a01b0316816001600160a01b03161461092d5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610479565b6109388a8a8a610944565b50505050505050505050565b6001600160a01b0383166109a65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610479565b6001600160a01b038216610a075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610479565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610acd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610479565b6001600160a01b038216610b2f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610479565b6001600160a01b03831660009081526005602052604090205481811015610ba75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610479565b610bb18282611865565b6001600160a01b038086166000908152600560205260408082209390935590851681529081208054849290610be7908490611878565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c3391815260200190565b60405180910390a350505050565b600b546000906001600160a01b031630148015610c5f5750600a5446145b15610c6b575060095490565b6104ab610c7661104b565b610c7e610d65565b611065565b6001600160a01b038216610cd95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610479565b8060006003016000828254610cee9190611878565b90915550506001600160a01b03821660009081526005602052604081208054839290610d1b908490611878565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600754600854604051600160a81b90920460f01b6001600160f01b031916602083015260228201526000906042015b60405160208183030381529060405280519060200120905090565b6001600160a01b038216610e0f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610479565b6001600160a01b03821660009081526005602052604090205481811015610e835760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610479565b610e8d8282611865565b6001600160a01b03841660009081526005602052604081209190915560038054849290610ebb908490611865565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a5c565b6000610f0861104b565b90506000610f14610d65565b600d5490915082141580610f2a5750600c548114155b1561051b5746600a55600b80546001600160a01b03191630179055610f4f8282611065565b600955600c55600d55565b6000610f668882611910565b506001610f738782611910565b506004805460ff90961660ff19909616959095179094556002805467ffffffffffffffff90941667ffffffffffffffff19909416939093179092556007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b03909216919091179190911790556008555050565b6001600160a01b0381166000908152600e602052604090208054600181018255905b50919050565b60006103e561101d610c41565b83611119565b600080600061103487878787611140565b915091506110418161122d565b5095945050505050565b6000611055610340565b604051602001610d9491906119d0565b60007fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac56472836110a76040805180820190915260018152603160f81b602082015290565b6040516020016110b791906119d0565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091524660808201523060a082015260c0810183905260e0015b60405160208183030381529060405280519060200120905092915050565b60405161190160f01b602082015260228101839052604281018290526000906062016110fb565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111775750600090506003611224565b8460ff16601b1415801561118f57508460ff16601c14155b156111a05750600090506004611224565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111f4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661121d57600060019250925050611224565b9150600090505b94509492505050565b6000816004811115611241576112416119ec565b036112495750565b600181600481111561125d5761125d6119ec565b036112aa5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610479565b60028160048111156112be576112be6119ec565b0361130b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610479565b600381600481111561131f5761131f6119ec565b036113775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610479565b600481600481111561138b5761138b6119ec565b036113e35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610479565b50565b60005b838110156114015781810151838201526020016113e9565b50506000910152565b600081518084526114228160208601602086016113e6565b601f01601f19169290920160200192915050565b602081526000611449602083018461140a565b9392505050565b80356001600160a01b038116811461146757600080fd5b919050565b6000806040838503121561147f57600080fd5b61148883611450565b946020939093013593505050565b6000806000606084860312156114ab57600080fd5b6114b484611450565b92506114c260208501611450565b9150604084013590509250925092565b6000602082840312156114e457600080fd5b61144982611450565b60ff60f81b881681526000602060e08184015261150d60e084018a61140a565b838103604085015261151f818a61140a565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561157157835183529284019291840191600101611555565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126115aa57600080fd5b813567ffffffffffffffff808211156115c5576115c5611583565b604051601f8301601f19908116603f011681019082821181831017156115ed576115ed611583565b8160405283815286602085880101111561160657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803567ffffffffffffffff8116811461146757600080fd5b60008060006060848603121561165357600080fd5b833567ffffffffffffffff8082111561166b57600080fd5b61167787838801611599565b9450602086013591508082111561168d57600080fd5b5061169a86828701611599565b9250506116a960408501611626565b90509250925092565b803560ff8116811461146757600080fd5b600080600080600080600060e0888a0312156116de57600080fd5b873567ffffffffffffffff808211156116f657600080fd5b6117028b838c01611599565b985060208a013591508082111561171857600080fd5b506117258a828b01611599565b965050611734604089016116b2565b945061174260608901611626565b935061175060808901611450565b925060a088013561ffff8116811461176757600080fd5b8092505060c0880135905092959891949750929550565b600080600080600080600060e0888a03121561179957600080fd5b6117a288611450565b96506117b060208901611450565b955060408801359450606088013593506117cc608089016116b2565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156117fb57600080fd5b61180483611450565b915061181260208401611450565b90509250929050565b600181811c9082168061182f57607f821691505b60208210810361100a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103e5576103e561184f565b808201808211156103e5576103e561184f565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b601f8211156106a857600081815260208120601f850160051c810160208610156118e95750805b601f850160051c820191505b81811015611908578281556001016118f5565b505050505050565b815167ffffffffffffffff81111561192a5761192a611583565b61193e81611938845461181b565b846118c2565b602080601f831160018114611973576000841561195b5750858301515b600019600386901b1c1916600185901b178555611908565b600085815260208120601f198616915b828110156119a257888601518255948401946001909101908401611983565b50858210156119c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516119e28184602087016113e6565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f5bce60e98337474a8d0a14f37e10079016ef393fcf5db9aed2609920f614b2b64736f6c63430008110033";

type TokenImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenImplementation__factory extends ContractFactory {
  constructor(...args: TokenImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenImplementation> {
    return super.deploy(overrides || {}) as Promise<TokenImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenImplementation {
    return super.attach(address) as TokenImplementation;
  }
  override connect(signer: Signer): TokenImplementation__factory {
    return super.connect(signer) as TokenImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenImplementationInterface {
    return new utils.Interface(_abi) as TokenImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenImplementation {
    return new Contract(address, _abi, signerOrProvider) as TokenImplementation;
  }
}
