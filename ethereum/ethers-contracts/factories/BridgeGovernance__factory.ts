/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BridgeGovernance,
  BridgeGovernanceInterface,
} from "../BridgeGovernance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "bridgeContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isWrappedAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "outstandingBridged",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedRecoverChainId",
        type: "bytes",
      },
    ],
    name: "parseRecoverChainId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "evmChainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "newChainId",
            type: "uint16",
          },
        ],
        internalType: "struct BridgeStructs.RecoverChainId",
        name: "rci",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "parseRegisterChain",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chainId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "emitterChainID",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
        ],
        internalType: "struct BridgeStructs.RegisterChain",
        name: "chain",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "parseUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "newContract",
            type: "bytes32",
          },
        ],
        internalType: "struct BridgeStructs.UpgradeContract",
        name: "chain",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "submitRecoverChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenAddress",
        type: "bytes32",
      },
    ],
    name: "wrappedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611704806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063a5799f93116100b8578063b96c7e4d1161007c578063b96c7e4d14610346578063cb4cfea81461036f578063d60b347f146103bc578063e039f224146103e8578063fbe3c2cd146103f0578063fbeeacd91461040257600080fd5b8063a5799f93146102d3578063aa4efa5b146102e6578063ad5c464814610309578063ad66a5f11461031a578063b172b2221461033e57600080fd5b80632c3c02a41161010a5780632c3c02a4146102415780632f3a3d5d1461026457806364d42b1714610275578063739fc8d11461028757806384acd1bb146102a75780639a8a0592146102b857600080fd5b806301f5325514610147578063178149e7146101b25780631a2be4da146101c75780631ff1e28614610203578063253946451461022e575b600080fd5b61015a6101553660046111d3565b61044f565b6040516101a99190600060a0820190508251825260ff6020840151166020830152604083015161ffff808216604085015280606086015116606085015250506080830151608083015292915050565b60405180910390f35b6101c56101c03660046111d3565b6105af565b005b6101f36101d5366004611253565b6001600160a01b031660009081526009602052604090205460ff1690565b60405190151581526020016101a9565b610216610211366004611296565b6106ba565b6040516001600160a01b0390911681526020016101a9565b6101c561023c3660046111d3565b6106e9565b6101f361024f3660046112c2565b60009081526005602052604090205460ff1690565b6001546001600160a01b0316610216565b600c545b6040519081526020016101a9565b600254640100000000900460ff1660405160ff90911681526020016101a9565b6000546001600160a01b0316610216565b60025461ffff165b60405161ffff90911681526020016101a9565b6101c56102e13660046111d3565b6107e7565b6101f36102f43660046112c2565b60009081526006602052604090205460ff1690565b6004546001600160a01b0316610216565b6102796103283660046112db565b61ffff166000908152600b602052604090205490565b600354610279565b610279610354366004611253565b6001600160a01b03166000908152600a602052604090205490565b61038261037d3660046111d3565b610940565b6040516101a991908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b6101f36103ca366004611253565b6001600160a01b031660009081526007602052604090205460ff1690565b6101f3610a29565b60025462010000900461ffff166102c0565b6104156104103660046111d3565b610a3c565b6040516101a991908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906104848382610b25565b82526104916020826112f8565b82519091506a546f6b656e427269646765146104c85760405162461bcd60e51b81526004016104bf90611319565b60405180910390fd5b6104d28382610b83565b60ff1660208301526104e56001826112f8565b9050816020015160ff1660011461050e5760405162461bcd60e51b81526004016104bf9061133f565b6105188382610bdf565b61ffff16604083015261052c6002826112f8565b90506105388382610bdf565b61ffff16606083015261054c6002826112f8565b90506105588382610b25565b60808301526105686020826112f8565b9050808351146105a95760405162461bcd60e51b815260206004820152600c60248201526b0eee4dedcce40d8cadccee8d60a31b60448201526064016104bf565b50919050565b6105b7610a29565b6105f05760405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b60448201526064016104bf565b60008060006105fe84610c3c565b9250925092508181906106245760405162461bcd60e51b81526004016104bf91906113b5565b50610633836101400151610e4c565b60006106428460e00151610940565b90504681604001511461068b5760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b60448201526064016104bf565b6106988160400151610e67565b60608101516002805461ffff191661ffff9092169190911790555b5050505050565b61ffff821660009081526008602090815260408083208484529091529020546001600160a01b03165b92915050565b6106f1610a29565b1561072d5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b60448201526064016104bf565b600080600061073b84610c3c565b9250925092508181906107615760405162461bcd60e51b81526004016104bf91906113b5565b50610770836101400151610e4c565b600061077f8460e00151610a3c565b905061078e60025461ffff1690565b61ffff16816040015161ffff16146107d95760405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b60448201526064016104bf565b60608101516106b390610eb0565b60008060006107f584610c3c565b92509250925081819061081b5760405162461bcd60e51b81526004016104bf91906113b5565b5061082a836101400151610e4c565b60006108398460e0015161044f565b905061084860025461ffff1690565b61ffff16816040015161ffff161480156108675750610865610a29565b155b806108785750604081015161ffff16155b6108b75760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b60448201526064016104bf565b606081015161ffff166000908152600b60205260408120541461091c5760405162461bcd60e51b815260206004820152601860248201527f636861696e20616c72656164792072656769737465726564000000000000000060448201526064016104bf565b6106b38160600151826080015161ffff9091166000908152600b6020526040902055565b60408051608081018252600080825260208201819052918101829052606081018290529061096e8382610b25565b825261097b6020826112f8565b82519091506a546f6b656e427269646765146109a95760405162461bcd60e51b81526004016104bf90611319565b6109b38382610b83565b60ff1660208301526109c66001826112f8565b9050816020015160ff166003146109ef5760405162461bcd60e51b81526004016104bf9061133f565b6109f98382610fdd565b6040830152610a096020826112f8565b9050610a158382610bdf565b61ffff1660608301526105686002826112f8565b600046610a35600c5490565b1415905090565b604080516080810182526000808252602082018190529181018290526060810182905290610a6a8382610b25565b8252610a776020826112f8565b82519091506a546f6b656e42726964676514610aa55760405162461bcd60e51b81526004016104bf90611319565b610aaf8382610b83565b60ff166020830152610ac26001826112f8565b9050816020015160ff16600214610aeb5760405162461bcd60e51b81526004016104bf9061133f565b610af58382610bdf565b61ffff166040830152610b096002826112f8565b9050610b158382610b25565b60608301526105686020826112f8565b6000610b328260206112f8565b83511015610b7a5760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b60448201526064016104bf565b50016020015190565b6000610b908260016112f8565b83511015610bd65760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016104bf565b50016001015190565b6000610bec8260026112f8565b83511015610c335760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016104bf565b50016002015190565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018190526101008201839052610120820152610140810191909152600060606000806000610caf6000546001600160a01b031690565b6001600160a01b031663c0fd8bde886040518263ffffffff1660e01b8152600401610cda91906113b5565b600060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d1f9190810190611538565b92509250925081610d365791945092509050610e45565b60025462010000900461ffff1661ffff16836060015161ffff1614610d925750506040805180820190915260168152753bb937b7339033b7bb32b93730b731b29031b430b4b760511b6020820152909350600092509050610e45565b600354836080015114610de357505060408051808201909152601981527f77726f6e6720676f7665726e616e636520636f6e7472616374000000000000006020820152909350600092509050610e45565b61014083015160009081526005602052604090205460ff1615610e2a578260006040518060600160405280602281526020016116ad60229139955095509550505050610e45565b50506040805160208101909152600081529093506001925090505b9193909250565b6000908152600560205260409020805460ff19166001179055565b468114610eab5760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b60448201526064016104bf565b600c55565b6000610ee37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050610eee82611032565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b03861691610f3191611690565b600060405180830381855af49150503d8060008114610f6c576040519150601f19603f3d011682016040523d82523d6000602084013e610f71565b606091505b5091509150818190610f965760405162461bcd60e51b81526004016104bf91906113b5565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b6000610fea8260206112f8565b83511015610b7a5760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016104bf565b61103b81611072565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b6110d65760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104bf565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561115057611150611117565b60405290565b604051610160810167ffffffffffffffff8111828210171561115057611150611117565b604051601f8201601f1916810167ffffffffffffffff811182821017156111a3576111a3611117565b604052919050565b600067ffffffffffffffff8211156111c5576111c5611117565b50601f01601f191660200190565b6000602082840312156111e557600080fd5b813567ffffffffffffffff8111156111fc57600080fd5b8201601f8101841361120d57600080fd5b803561122061121b826111ab565b61117a565b81815285602083850101111561123557600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561126557600080fd5b81356001600160a01b038116811461127c57600080fd5b9392505050565b61ffff8116811461129357600080fd5b50565b600080604083850312156112a957600080fd5b82356112b481611283565b946020939093013593505050565b6000602082840312156112d457600080fd5b5035919050565b6000602082840312156112ed57600080fd5b813561127c81611283565b808201808211156106e357634e487b7160e01b600052601160045260246000fd5b6020808252600c908201526b77726f6e67206d6f64756c6560a01b604082015260600190565b6020808252600c908201526b3bb937b7339030b1ba34b7b760a11b604082015260600190565b60005b83811015611380578181015183820152602001611368565b50506000910152565b600081518084526113a1816020860160208601611365565b601f01601f19169290920160200192915050565b60208152600061127c6020830184611389565b805160ff811681146113d957600080fd5b919050565b805163ffffffff811681146113d957600080fd5b80516113d981611283565b805167ffffffffffffffff811681146113d957600080fd5b600082601f83011261142657600080fd5b815161143461121b826111ab565b81815284602083860101111561144957600080fd5b61145a826020830160208701611365565b949350505050565b600082601f83011261147357600080fd5b8151602067ffffffffffffffff82111561148f5761148f611117565b61149d818360051b0161117a565b82815260079290921b840181019181810190868411156114bc57600080fd5b8286015b8481101561151d57608081890312156114d95760008081fd5b6114e161112d565b81518152848201518582015260406114fa8184016113c8565b90820152606061150b8382016113c8565b908201528352918301916080016114c0565b509695505050505050565b805180151581146113d957600080fd5b60008060006060848603121561154d57600080fd5b835167ffffffffffffffff8082111561156557600080fd5b90850190610160828803121561157a57600080fd5b611582611156565b61158b836113c8565b8152611599602084016113de565b60208201526115aa604084016113de565b60408201526115bb606084016113f2565b6060820152608083015160808201526115d660a084016113fd565b60a08201526115e760c084016113c8565b60c082015260e0830151828111156115fe57600080fd5b61160a89828601611415565b60e08301525061010061161e8185016113de565b90820152610120838101518381111561163657600080fd5b6116428a828701611462565b91830191909152506101408381015190820152945061166360208701611528565b9350604086015191508082111561167957600080fd5b5061168686828701611415565b9150509250925092565b600082516116a2818460208701611365565b919091019291505056fe676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a26469706673582212203f3a0242d9f17e0f3df3d9ee8a69aa8ea402e09de719abc81d0c98dee87a334e64736f6c63430008110033";

type BridgeGovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeGovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeGovernance__factory extends ContractFactory {
  constructor(...args: BridgeGovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeGovernance> {
    return super.deploy(overrides || {}) as Promise<BridgeGovernance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeGovernance {
    return super.attach(address) as BridgeGovernance;
  }
  override connect(signer: Signer): BridgeGovernance__factory {
    return super.connect(signer) as BridgeGovernance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeGovernanceInterface {
    return new utils.Interface(_abi) as BridgeGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeGovernance {
    return new Contract(address, _abi, signerOrProvider) as BridgeGovernance;
  }
}
