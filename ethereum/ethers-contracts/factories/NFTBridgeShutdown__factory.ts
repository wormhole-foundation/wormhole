/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NFTBridgeShutdown,
  NFTBridgeShutdownInterface,
} from "../NFTBridgeShutdown";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "bridgeContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isWrappedAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedRecoverChainId",
        type: "bytes",
      },
    ],
    name: "parseRecoverChainId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "evmChainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "newChainId",
            type: "uint16",
          },
        ],
        internalType: "struct NFTBridgeStructs.RecoverChainId",
        name: "rci",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "parseRegisterChain",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chainId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "emitterChainID",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
        ],
        internalType: "struct NFTBridgeStructs.RegisterChain",
        name: "chain",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "parseUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "newContract",
            type: "bytes32",
          },
        ],
        internalType: "struct NFTBridgeStructs.UpgradeContract",
        name: "chain",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "splCache",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "symbol",
            type: "bytes32",
          },
        ],
        internalType: "struct NFTBridgeStorage.SPLCache",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "submitRecoverChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenAddress",
        type: "bytes32",
      },
    ],
    name: "wrappedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061190f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806384acd1bb116100b8578063b172b2221161007c578063b172b2221461039c578063cb4cfea8146103a4578063d60b347f146103f1578063e039f2241461041d578063fbe3c2cd14610425578063fbeeacd91461043757600080fd5b806384acd1bb146103165780639a8a059214610327578063a5799f9314610342578063aa4efa5b14610355578063ad66a5f11461037857600080fd5b80632c3c02a41161010a5780632c3c02a4146102415780632f3a3d5d146102645780633ca648261461027557806364d42b17146102dc578063739fc8d1146102ee5780638129fc1c1461030e57600080fd5b806301f5325514610147578063178149e7146101b25780631a2be4da146101c75780631ff1e28614610203578063253946451461022e575b600080fd5b61015a61015536600461142d565b610484565b6040516101a99190600060a0820190508251825260ff6020840151166020830152604083015161ffff808216604085015280606086015116606085015250506080830151608083015292915050565b60405180910390f35b6101c56101c036600461142d565b610673565b005b6101f36101d53660046114ad565b6001600160a01b031660009081526008602052604090205460ff1690565b60405190151581526020016101a9565b6102166102113660046114ed565b61077e565b6040516001600160a01b0390911681526020016101a9565b6101c561023c36600461142d565b6107ad565b6101f361024f366004611519565b60009081526004602052604090205460ff1690565b6001546001600160a01b0316610216565b6102c1610283366004611519565b6040805180820190915260008082526020820152506000908152600a6020908152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252016101a9565b600b545b6040519081526020016101a9565b600254640100000000900460ff1660405160ff90911681526020016101a9565b6101c56108ab565b6000546001600160a01b0316610216565b60025461ffff165b60405161ffff90911681526020016101a9565b6101c561035036600461142d565b61090b565b6101f3610363366004611519565b60009081526005602052604090205460ff1690565b6102e0610386366004611532565b61ffff1660009081526009602052604090205490565b6003546102e0565b6103b76103b236600461142d565b6109ff565b6040516101a991908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b6101f36103ff3660046114ad565b6001600160a01b031660009081526006602052604090205460ff1690565b6101f3610ba9565b60025462010000900461ffff1661032f565b61044a61044536600461142d565b610bbc565b6040516101a991908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906104b98382610d7f565b82526104c660208261154f565b8251909150684e4654427269646765146105335760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e67206d6f64604482015262756c6560e81b60648201526084015b60405180910390fd5b61053d8382610ddd565b60ff16602083015261055060018261154f565b9050816020015160ff166001146105b55760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e672061637460448201526234b7b760e91b606482015260840161052a565b6105bf8382610e39565b61ffff1660408301526105d360028261154f565b90506105df8382610e39565b61ffff1660608301526105f360028261154f565b90506105ff8382610d7f565b608083015261060f60208261154f565b90508083511461066d5760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e67206c656e6044820152620cee8d60eb1b606482015260840161052a565b50919050565b61067b610ba9565b6106b45760405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b604482015260640161052a565b60008060006106c284610e96565b9250925092508181906106e85760405162461bcd60e51b815260040161052a91906115c0565b506106f78361014001516110a6565b60006107068460e001516109ff565b90504681604001511461074f5760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b604482015260640161052a565b61075c81604001516110c1565b60608101516002805461ffff191661ffff9092169190911790555b5050505050565b61ffff821660009081526007602090815260408083208484529091529020546001600160a01b03165b92915050565b6107b5610ba9565b156107f15760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b604482015260640161052a565b60008060006107ff84610e96565b9250925092508181906108255760405162461bcd60e51b815260040161052a91906115c0565b506108348361014001516110a6565b60006108438460e00151610bbc565b905061085260025461ffff1690565b61ffff16816040015161ffff161461089d5760405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b604482015260640161052a565b60608101516107779061110a565b60006108de7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b9050610908816001600160a01b03166000908152600660205260409020805460ff19166001179055565b50565b600080600061091984610e96565b92509250925081819061093f5760405162461bcd60e51b815260040161052a91906115c0565b5061094e8361014001516110a6565b600061095d8460e00151610484565b905061096c60025461ffff1690565b61ffff16816040015161ffff1614801561098b5750610989610ba9565b155b8061099c5750604081015161ffff16155b6109db5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b604482015260640161052a565b6107778160600151826080015161ffff909116600090815260096020526040902055565b604080516080810182526000808252602082018190529181018290526060810182905290610a2d8382610d7f565b8252610a3a60208261154f565b8251909150684e465442726964676514610aa25760405162461bcd60e51b8152602060048201526024808201527f696e76616c6964205265636f766572436861696e49643a2077726f6e67206d6f60448201526364756c6560e01b606482015260840161052a565b610aac8382610ddd565b60ff166020830152610abf60018261154f565b9050816020015160ff16600314610b245760405162461bcd60e51b8152602060048201526024808201527f696e76616c6964205265636f766572436861696e49643a2077726f6e672061636044820152633a34b7b760e11b606482015260840161052a565b610b2e8382611237565b6040830152610b3e60208261154f565b9050610b4a8382610e39565b61ffff166060830152610b5e60028261154f565b90508083511461066d5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b604482015260640161052a565b600046610bb5600b5490565b1415905090565b604080516080810182526000808252602082018190529181018290526060810182905290610bea8382610d7f565b8252610bf760208261154f565b8251909150684e465442726964676514610c615760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206d6044820152646f64756c6560d81b606482015260840161052a565b610c6b8382610ddd565b60ff166020830152610c7e60018261154f565b9050816020015160ff16600214610ce55760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206160448201526431ba34b7b760d91b606482015260840161052a565b610cef8382610e39565b61ffff166040830152610d0360028261154f565b9050610d0f8382610d7f565b6060830152610d1f60208261154f565b90508083511461066d5760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206c6044820152640cadccee8d60db1b606482015260840161052a565b6000610d8c82602061154f565b83511015610dd45760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b604482015260640161052a565b50016020015190565b6000610dea82600161154f565b83511015610e305760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161052a565b50016001015190565b6000610e4682600261154f565b83511015610e8d5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b604482015260640161052a565b50016002015190565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018190526101008201839052610120820152610140810191909152600060606000806000610f096000546001600160a01b031690565b6001600160a01b031663c0fd8bde886040518263ffffffff1660e01b8152600401610f3491906115c0565b600060405180830381865afa158015610f51573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f799190810190611743565b92509250925081610f90579194509250905061109f565b60025462010000900461ffff1661ffff16836060015161ffff1614610fec5750506040805180820190915260168152753bb937b7339033b7bb32b93730b731b29031b430b4b760511b602082015290935060009250905061109f565b60035483608001511461103d57505060408051808201909152601981527f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000602082015290935060009250905061109f565b61014083015160009081526004602052604090205460ff1615611084578260006040518060600160405280602281526020016118b86022913995509550955050505061109f565b50506040805160208101909152600081529093506001925090505b9193909250565b6000908152600460205260409020805460ff19166001179055565b4681146111055760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b604482015260640161052a565b600b55565b600061113d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506111488261128c565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b0386169161118b9161189b565b600060405180830381855af49150503d80600081146111c6576040519150601f19603f3d011682016040523d82523d6000602084013e6111cb565b606091505b50915091508181906111f05760405162461bcd60e51b815260040161052a91906115c0565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b600061124482602061154f565b83511015610dd45760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b604482015260640161052a565b611295816112cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b6113305760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161052a565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156113aa576113aa611371565b60405290565b604051610160810167ffffffffffffffff811182821017156113aa576113aa611371565b604051601f8201601f1916810167ffffffffffffffff811182821017156113fd576113fd611371565b604052919050565b600067ffffffffffffffff82111561141f5761141f611371565b50601f01601f191660200190565b60006020828403121561143f57600080fd5b813567ffffffffffffffff81111561145657600080fd5b8201601f8101841361146757600080fd5b803561147a61147582611405565b6113d4565b81815285602083850101111561148f57600080fd5b81602084016020830137600091810160200191909152949350505050565b6000602082840312156114bf57600080fd5b81356001600160a01b03811681146114d657600080fd5b9392505050565b61ffff8116811461090857600080fd5b6000806040838503121561150057600080fd5b823561150b816114dd565b946020939093013593505050565b60006020828403121561152b57600080fd5b5035919050565b60006020828403121561154457600080fd5b81356114d6816114dd565b808201808211156107a757634e487b7160e01b600052601160045260246000fd5b60005b8381101561158b578181015183820152602001611573565b50506000910152565b600081518084526115ac816020860160208601611570565b601f01601f19169290920160200192915050565b6020815260006114d66020830184611594565b805160ff811681146115e457600080fd5b919050565b805163ffffffff811681146115e457600080fd5b80516115e4816114dd565b805167ffffffffffffffff811681146115e457600080fd5b600082601f83011261163157600080fd5b815161163f61147582611405565b81815284602083860101111561165457600080fd5b611665826020830160208701611570565b949350505050565b600082601f83011261167e57600080fd5b8151602067ffffffffffffffff82111561169a5761169a611371565b6116a8818360051b016113d4565b82815260079290921b840181019181810190868411156116c757600080fd5b8286015b8481101561172857608081890312156116e45760008081fd5b6116ec611387565b81518152848201518582015260406117058184016115d3565b9082015260606117168382016115d3565b908201528352918301916080016116cb565b509695505050505050565b805180151581146115e457600080fd5b60008060006060848603121561175857600080fd5b835167ffffffffffffffff8082111561177057600080fd5b90850190610160828803121561178557600080fd5b61178d6113b0565b611796836115d3565b81526117a4602084016115e9565b60208201526117b5604084016115e9565b60408201526117c6606084016115fd565b6060820152608083015160808201526117e160a08401611608565b60a08201526117f260c084016115d3565b60c082015260e08301518281111561180957600080fd5b61181589828601611620565b60e0830152506101006118298185016115e9565b90820152610120838101518381111561184157600080fd5b61184d8a82870161166d565b91830191909152506101408381015190820152945061186e60208701611733565b9350604086015191508082111561188457600080fd5b5061189186828701611620565b9150509250925092565b600082516118ad818460208701611570565b919091019291505056fe676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a2646970667358221220a686cb488acf26d0c60307820a338ed789ec921751a9e543508fe23435382e6a64736f6c63430008110033";

type NFTBridgeShutdownConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTBridgeShutdownConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTBridgeShutdown__factory extends ContractFactory {
  constructor(...args: NFTBridgeShutdownConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTBridgeShutdown> {
    return super.deploy(overrides || {}) as Promise<NFTBridgeShutdown>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTBridgeShutdown {
    return super.attach(address) as NFTBridgeShutdown;
  }
  override connect(signer: Signer): NFTBridgeShutdown__factory {
    return super.connect(signer) as NFTBridgeShutdown__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTBridgeShutdownInterface {
    return new utils.Interface(_abi) as NFTBridgeShutdownInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTBridgeShutdown {
    return new Contract(address, _abi, signerOrProvider) as NFTBridgeShutdown;
  }
}
