/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockBatchedVAASender,
  MockBatchedVAASenderInterface,
} from "../MockBatchedVAASender";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "sendMultipleMessages",
    outputs: [
      {
        internalType: "uint64",
        name: "messageSequence0",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "messageSequence1",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "messageSequence2",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeCore",
        type: "address",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061044e806100206000396000f3fe6080604052600436106100295760003560e01c806311d48db91461002e57806366d382031461006d575b600080fd5b61004161003c36600461027b565b6100ac565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561007957600080fd5b506100aa610088366004610358565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b60008060006100c36000546001600160a01b031690565b6001600160a01b031663b19a437e348888886040518563ffffffff1660e01b81526004016100f393929190610388565b60206040518083038185885af1158015610111573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061013691906103ee565b925061014a6000546001600160a01b031690565b6001600160a01b031663b19a437e348888886040518563ffffffff1660e01b815260040161017a93929190610388565b60206040518083038185885af1158015610198573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101bd91906103ee565b91506101d16000546001600160a01b031690565b6001600160a01b031663b19a437e348888886040518563ffffffff1660e01b815260040161020193929190610388565b60206040518083038185885af115801561021f573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061024491906103ee565b905093509350939050565b634e487b7160e01b600052604160045260246000fd5b803560ff8116811461027657600080fd5b919050565b60008060006060848603121561029057600080fd5b833563ffffffff811681146102a457600080fd5b9250602084013567ffffffffffffffff808211156102c157600080fd5b818601915086601f8301126102d557600080fd5b8135818111156102e7576102e761024f565b604051601f8201601f19908116603f0116810190838211818310171561030f5761030f61024f565b8160405282815289602084870101111561032857600080fd5b82602086016020830137600060208483010152809650505050505061034f60408501610265565b90509250925092565b60006020828403121561036a57600080fd5b81356001600160a01b038116811461038157600080fd5b9392505050565b63ffffffff8416815260006020606081840152845180606085015260005b818110156103c2578681018301518582016080015282016103a6565b506000608082860101526080601f19601f8301168501019250505060ff83166040830152949350505050565b60006020828403121561040057600080fd5b815167ffffffffffffffff8116811461038157600080fdfea26469706673582212201cac777866f31dae66144f5f7bddb1a27f573a9ebeb7e9814a6a46aafac1ff0264736f6c63430008110033";

type MockBatchedVAASenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBatchedVAASenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBatchedVAASender__factory extends ContractFactory {
  constructor(...args: MockBatchedVAASenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockBatchedVAASender> {
    return super.deploy(overrides || {}) as Promise<MockBatchedVAASender>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockBatchedVAASender {
    return super.attach(address) as MockBatchedVAASender;
  }
  override connect(signer: Signer): MockBatchedVAASender__factory {
    return super.connect(signer) as MockBatchedVAASender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBatchedVAASenderInterface {
    return new utils.Interface(_abi) as MockBatchedVAASenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBatchedVAASender {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockBatchedVAASender;
  }
}
