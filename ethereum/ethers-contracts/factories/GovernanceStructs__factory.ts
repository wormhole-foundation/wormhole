/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GovernanceStructs,
  GovernanceStructsInterface,
} from "../GovernanceStructs";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedUpgrade",
        type: "bytes",
      },
    ],
    name: "parseContractUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "newContract",
            type: "address",
          },
        ],
        internalType: "struct GovernanceStructs.ContractUpgrade",
        name: "cu",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedUpgrade",
        type: "bytes",
      },
    ],
    name: "parseGuardianSetUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "keys",
                type: "address[]",
              },
              {
                internalType: "uint32",
                name: "expirationTime",
                type: "uint32",
              },
            ],
            internalType: "struct Structs.GuardianSet",
            name: "newGuardianSet",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "newGuardianSetIndex",
            type: "uint32",
          },
        ],
        internalType: "struct GovernanceStructs.GuardianSetUpgrade",
        name: "gsu",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedRecoverChainId",
        type: "bytes",
      },
    ],
    name: "parseRecoverChainId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "evmChainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "newChainId",
            type: "uint16",
          },
        ],
        internalType: "struct GovernanceStructs.RecoverChainId",
        name: "rci",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSetMessageFee",
        type: "bytes",
      },
    ],
    name: "parseSetMessageFee",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "messageFee",
            type: "uint256",
          },
        ],
        internalType: "struct GovernanceStructs.SetMessageFee",
        name: "smf",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedTransferFees",
        type: "bytes",
      },
    ],
    name: "parseTransferFees",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "recipient",
            type: "bytes32",
          },
        ],
        internalType: "struct GovernanceStructs.TransferFees",
        name: "tf",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d77806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630319e59c1461005c57806304ca84cf146100c15780634fdc60fa146100e1578063515f324714610137578063cb4cfea814610184575b600080fd5b61006f61006a366004610b84565b6101d1565b6040516100b89190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b6100d46100cf366004610b84565b61032c565b6040516100b89190610c35565b6100f46100ef366004610b84565b610544565b6040516100b891908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b61014a610145366004610b84565b610680565b6040516100b891908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b610197610192366004610b84565b6107af565b6040516100b891908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b6040805160a08101825260008082526020820181905291810182905260608101829052608081018290529061020683826108e0565b8252610213602082610cff565b905061021f8382610944565b60ff166020830152610232600182610cff565b9050816020015160ff166004146102875760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201526064015b60405180910390fd5b61029183826109a0565b61ffff1660408301526102a5600282610cff565b90506102b183826109fd565b60608301526102c1602082610cff565b90506102cd83826108e0565b60808301526102dd602082610cff565b9050808351146103265760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b604482015260640161027e565b50919050565b610334610b14565b600061034083826108e0565b825261034d602082610cff565b90506103598382610944565b60ff16602083015261036c600182610cff565b9050816020015160ff166002146103c55760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e53657455706772616465000000000000604482015260640161027e565b6103cf83826109a0565b61ffff1660408301526103e3600282610cff565b90506103ef8382610a52565b63ffffffff166080830152610405600482610cff565b905060006104138483610944565b9050610420600183610cff565b915060405180604001604052808260ff1667ffffffffffffffff81111561044957610449610b6e565b604051908082528060200260200182016040528015610472578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff168110156104ec5761049d8584610aaf565b6060850151518051839081106104b5576104b5610d12565b6001600160a01b03909216602092830291909101909101526104d8601484610cff565b9250806104e481610d28565b915050610488565b508184511461053d5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e53657455706772616465000000000000604482015260640161027e565b5050919050565b60408051608081018252600080825260208201819052918101829052606081018290529061057283826108e0565b825261057f602082610cff565b905061058b8382610944565b60ff16602083015261059e600182610cff565b9050816020015160ff166001146105f15760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b604482015260640161027e565b6105fb83826109a0565b61ffff16604083015261060f600282610cff565b905061061b83826108e0565b6001600160a01b03166060830152610634602082610cff565b9050808351146103265760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b604482015260640161027e565b6040805160808101825260008082526020820181905291810182905260608101829052906106ae83826108e0565b82526106bb602082610cff565b90506106c78382610944565b60ff1660208301526106da600182610cff565b9050816020015160ff1660031461072b5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b604482015260640161027e565b61073583826109a0565b61ffff166040830152610749600282610cff565b905061075583826109fd565b6060830152610765602082610cff565b9050808351146103265760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b604482015260640161027e565b6040805160808101825260008082526020820181905291810182905260608101829052906107dd83826108e0565b82526107ea602082610cff565b90506107f68382610944565b60ff166020830152610809600182610cff565b9050816020015160ff1660051461085b5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b604482015260640161027e565b61086583826109fd565b6040830152610875602082610cff565b905061088183826109a0565b61ffff166060830152610895600282610cff565b9050808351146103265760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b604482015260640161027e565b60006108ed826020610cff565b835110156109355760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b604482015260640161027e565b50818101602001515b92915050565b6000610951826001610cff565b835110156109975760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161027e565b50016001015190565b60006109ad826002610cff565b835110156109f45760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b604482015260640161027e565b50016002015190565b6000610a0a826020610cff565b835110156109355760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b604482015260640161027e565b6000610a5f826004610cff565b83511015610aa65760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b604482015260640161027e565b50016004015190565b6000610abc826014610cff565b83511015610b045760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015260640161027e565b500160200151600160601b900490565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001610b61604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610b9657600080fd5b813567ffffffffffffffff80821115610bae57600080fd5b818401915084601f830112610bc257600080fd5b813581811115610bd457610bd4610b6e565b604051601f8201601f19908116603f01168101908382118183101715610bfc57610bfc610b6e565b81604052828152876020848701011115610c1557600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602080835283518184015260ff8185015116604084015261ffff6040850151166060840152606084015160a0608085015261010084018151604060c0870152818151808452610120880191508583019350600092505b80831015610cb65783516001600160a01b03168252928501926001929092019190850190610c8d565b509383015163ffffffff1660e0870152608087015193610cde60a088018663ffffffff169052565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561093e5761093e610ce9565b634e487b7160e01b600052603260045260246000fd5b600060018201610d3a57610d3a610ce9565b506001019056fea26469706673582212201640ab0728dc086ff0a054fc9538535974f9ef72902c9861172a72659c9e575e64736f6c63430008110033";

type GovernanceStructsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceStructsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceStructs__factory extends ContractFactory {
  constructor(...args: GovernanceStructsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernanceStructs> {
    return super.deploy(overrides || {}) as Promise<GovernanceStructs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernanceStructs {
    return super.attach(address) as GovernanceStructs;
  }
  override connect(signer: Signer): GovernanceStructs__factory {
    return super.connect(signer) as GovernanceStructs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceStructsInterface {
    return new utils.Interface(_abi) as GovernanceStructsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceStructs {
    return new Contract(address, _abi, signerOrProvider) as GovernanceStructs;
  }
}
