/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SigningWormholeSimulator,
  SigningWormholeSimulatorInterface,
} from "../../WormholeSimulator.sol/SigningWormholeSimulator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWormhole",
        name: "wormhole_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "devnetGuardian",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm_",
        type: "tuple",
      },
    ],
    name: "encodeAndSignMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm_",
        type: "tuple",
      },
    ],
    name: "encodeObservation",
    outputs: [
      {
        internalType: "bytes",
        name: "encodedObservation",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log[]",
        name: "logs",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
    ],
    name: "fetchSignedBatchVAAFromLogs",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
    ],
    name: "fetchSignedMessageFromLogs",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log[]",
        name: "logs",
        type: "tuple[]",
      },
    ],
    name: "fetchWormholeMessageFromLog",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "invalidateVM",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028233803806200282383398101604081905262000034916200059c565b600080546001600160a01b0319166001600160a01b03841617905560018190556040516001625e79b760e01b0319815260048101829052620000d690600080516020620028038339815191529063ffa18649906024016020604051808303816000875af1158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d09190620005cd565b620000de565b5050620007fa565b60008060009054906101000a90046001600160a01b03166001600160a01b0316631cfe79516040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015991906200060e565b6040805163ffffffff8316602082015260029181019190915290915060009060600160408051808303601f1901815290829052805160209091012060008054630667f9d760e41b84526001600160a01b031660048401526024830182905290925090600080516020620028038339815191529063667f9d70906044016020604051808303816000875af1158015620001f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021b91906200062c565b905060015b81811015620002ef57600054604080516020808201879052825180830382018152918301909252805191012060008051602062002803833981519152916370ca10bb916001600160a01b03909116906200027c90859062000646565b60405160e084901b6001600160e01b03191681526001600160a01b039092166004830152602482015260006044820152606401600060405180830381600087803b158015620002ca57600080fd5b505af1158015620002df573d6000803e3d6000fd5b5050505060018101905062000220565b5060008054604080516020808201879052825180830382018152918301909252805191012060008051602062002803833981519152926370ca10bb926001600160a01b031691620003409162000646565b60405160e084901b6001600160e01b03191681526001600160a01b03928316600482015260248101919091529087166044820152606401600060405180830381600087803b1580156200039257600080fd5b505af1158015620003a7573d6000803e3d6000fd5b50506000546040516370ca10bb60e01b81526001600160a01b03909116600482015260248101859052600160448201526000805160206200280383398151915292506370ca10bb9150606401600060405180830381600087803b1580156200040e57600080fd5b505af115801562000423573d6000803e3d6000fd5b505060008054604051637ca8cbad60e11b815263ffffffff881660048201529193506001600160a01b0316915063f951975a90602401600060405180830381865afa15801562000477573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620004a19190810190620006e2565b518051909150600114620004fc5760405162461bcd60e51b815260206004820152601560248201527f677561726469616e732e6c656e67746820213d2031000000000000000000000060448201526064015b60405180910390fd5b846001600160a01b0316816000815181106200051c576200051c620007e4565b60200260200101516001600160a01b0316146200057c5760405162461bcd60e51b815260206004820152601f60248201527f696e636f727265637420677561726469616e20736574206f76657272696465006044820152606401620004f3565b5050505050565b6001600160a01b03811681146200059957600080fd5b50565b60008060408385031215620005b057600080fd5b8251620005bd8162000583565b6020939093015192949293505050565b600060208284031215620005e057600080fd5b8151620005ed8162000583565b9392505050565b805163ffffffff811681146200060957600080fd5b919050565b6000602082840312156200062157600080fd5b620005ed82620005f4565b6000602082840312156200063f57600080fd5b5051919050565b808201808211156200066857634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620006a957620006a96200066e565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620006da57620006da6200066e565b604052919050565b60006020808385031215620006f657600080fd5b82516001600160401b03808211156200070e57600080fd5b90840190604082870312156200072357600080fd5b6200072d62000684565b8251828111156200073d57600080fd5b8301601f810188136200074f57600080fd5b8051838111156200076457620007646200066e565b8060051b935062000777868501620006af565b818152938201860193868101908a8611156200079257600080fd5b928701925b85841015620007c05783519250620007af8362000583565b828252928701929087019062000797565b845250620007d3915050838501620005f4565b848201528094505050505092915050565b634e487b7160e01b600052603260045260246000fd5b611ff9806200080a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80634603c12a116100665780634603c12a1461011a57806364bb9bfb1461012d57806384acd1bb14610140578063920539af146101535780639404495d1461016657600080fd5b80630e645295146100985780631e5a2802146100c157806323aa2a9d146100d45780633a768463146100e7575b600080fd5b6100ab6100a636600461174b565b610186565b6040516100b891906118bf565b60405180910390f35b6100d26100cf3660046118d9565b50565b005b6100d26100e2366004611915565b610444565b610102737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100b8565b6100ab610128366004611a09565b61071e565b6100ab61013b36600461174b565b610768565b600054610102906001600160a01b031681565b6100ab610161366004611ae7565b6107b9565b610179610174366004611b59565b610e4d565b6040516100b89190611b8d565b6060600061019383610768565b905061019e81611009565b610140840152604080516001808252818301909252600091816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816101bb579050506001546101408601516040516338d07aa960e21b815260048101929092526024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa4906044016060604051808303816000875af1158015610253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102779190611c3d565b8360008151811061028a5761028a611c74565b6020026020010151604001846000815181106102a8576102a8611c74565b6020026020010151600001856000815181106102c6576102c6611c74565b602002602001015160200183815250838152508360ff1660ff168152505050506000816000815181106102fb576102fb611c74565b60200260200101516060019060ff16908160ff1681525050836000015160008054906101000a90046001600160a01b03166001600160a01b0316631cfe79516040518163ffffffff1660e01b8152600401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190611c8a565b82518360008261039f5761039f611c74565b602002602001015160600151846000815181106103be576103be611c74565b602002602001015160000151856000815181106103dd576103dd611c74565b602002602001015160200151601b876000815181106103fe576103fe611c74565b6020026020010151604001516104149190611cbd565b8860405160200161042c989796959493929190611cf2565b60405160208183030381529060405292505050919050565b600063436f726560001b9050600081600360008054906101000a90046001600160a01b03166001600160a01b0316639a8a05926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190611d68565b8560405160200161050e949392919093845260f89290921b6001600160f81b031916602084015260f01b6001600160f01b0319166021830152602382015260430190565b60408051601f19818403018152610160830182526001835263ffffffff421660208481019190915260008484018190528054845163fbe3c2cd60e01b8152945193965090949360608501936001600160a01b039092169263fbe3c2cd926004808401938290030181865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190611d68565b61ffff16815260200160008054906101000a90046001600160a01b03166001600160a01b031663b172b2226040518163ffffffff1660e01b8152600401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190611d85565b81526000602080830182905260c860408085019190915260608401879052608084018390528051838152918201905260a0909201919061069b565b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816106675790505b508152600060209091018190529091506106b482610186565b60005460405163f42bc64160e01b81529192506001600160a01b03169063f42bc641906106e59084906004016118bf565b600060405180830381600087803b1580156106ff57600080fd5b505af1158015610713573d6000803e3d6000fd5b505050505050505050565b6060600061072b85611042565b6001815263ffffffff4216602082015261ffff851660608201526001600160a01b0384166080820152905061075f81610186565b95945050505050565b606081602001518260400151836060015184608001518560a001518660c001518760e001516040516020016107a39796959493929190611d9e565b6040516020818303038152906040529050919050565b606060008086516001600160401b038111156107d7576107d76114e3565b60405190808252806020026020018201604052801561081057816020015b6107fd611488565b8152602001906001900390816107f55790505b50905060005b875181101561093b5761084188828151811061083457610834611c74565b6020026020010151611042565b82828151811061085357610853611c74565b60200260200101819052504282828151811061087157610871611c74565b60200260200101516020019063ffffffff16908163ffffffff1681525050858282815181106108a2576108a2611c74565b60200260200101516060019061ffff16908161ffff1681525050846001600160a01b031660001b8282815181106108db576108db611c74565b602002602001015160800181815250508663ffffffff1682828151811061090457610904611c74565b60200260200101516040015163ffffffff160361092957610926600184611e25565b92505b8061093381611e3e565b915050610816565b50606060008360ff166001600160401b0381111561095b5761095b6114e3565b604051908082528060200260200182016040528015610984578160200160208202803683370190505b5090506000805b8a51811015610b34578963ffffffff168582815181106109ad576109ad611c74565b60200260200101516040015163ffffffff1603610b225760008582815181106109d8576109d8611c74565b6020026020010151602001518683815181106109f6576109f6611c74565b602002602001015160400151878481518110610a1457610a14611c74565b602002602001015160600151888581518110610a3257610a32611c74565b602002602001015160800151898681518110610a5057610a50611c74565b602002602001015160a001518a8781518110610a6e57610a6e611c74565b602002602001015160c001518b8881518110610a8c57610a8c611c74565b602002602001015160e00151604051602001610aae9796959493929190611d9e565b6040516020818303038152906040529050610ac881611009565b848460ff1681518110610add57610add611c74565b6020026020010181815250508483825183604051602001610b019493929190611e57565b60405160208183030381529060405294508280610b1d90611eb3565b935050505b80610b2c81611e3e565b91505061098b565b506000610ba0600284604051602001610b4d9190611f05565b60405160208183030381529060405280519060200120604051602001610b8c92919060f89290921b6001600160f81b0319168252600182015260210190565b604051602081830303815290604052611009565b60408051600180825281830190925291925060009190816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610bbb5750506001546040516338d07aa960e21b8152600481019190915260248101849052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa4906044016060604051808303816000875af1158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c729190611c3d565b83600081518110610c8557610c85611c74565b602002602001015160400184600081518110610ca357610ca3611c74565b602002602001015160000185600081518110610cc157610cc1611c74565b602002602001015160200183815250838152508360ff1660ff16815250505050600081600081518110610cf657610cf6611c74565b60200260200101516060019060ff16908160ff1681525050600260008054906101000a90046001600160a01b03166001600160a01b0316631cfe79516040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190611c8a565b600183600081518110610d9a57610d9a611c74565b60200260200101516060015184600081518110610db957610db9611c74565b60200260200101516000015185600081518110610dd857610dd8611c74565b602002602001015160200151601b87600081518110610df957610df9611c74565b602002602001015160400151610e0f9190611cbd565b8d8b8f8e604051602001610e2d9b9a99989796959493929190611f11565b604051602081830303815290604052975050505050505050949350505050565b60606000805b8351811015610eda577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2848281518110610e8f57610e8f611c74565b602002602001015160000151600081518110610ead57610ead611c74565b602002602001015103610ec857610ec5600183611f9d565b91505b80610ed281611e3e565b915050610e53565b506000816001600160401b03811115610ef557610ef56114e3565b604051908082528060200260200182016040528015610f3a57816020015b6040805180820190915260608082526020820152815260200190600190039081610f135790505b5090506000805b8551811015610fff577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2868281518110610f7d57610f7d611c74565b602002602001015160000151600081518110610f9b57610f9b611c74565b602002602001015103610fed57858181518110610fba57610fba611c74565b6020026020010151838381518110610fd457610fd4611c74565b6020908102919091010152610fea600183611f9d565b91505b80610ff781611e3e565b915050610f41565b5090949350505050565b6000818051906020012060405160200161102591815260200190565b604051602081830303815290604052805190602001209050919050565b61104a611488565b6000826000015160018151811061106357611063611c74565b602002602001015182608001818152505061109b60088260206110869190611f9d565b6110909190611fb0565b602085015190611201565b6001600160401b031660a08301526110b4602082611f9d565b90506110db60046110c6836020611f9d565b6110d09190611fb0565b602085015190611264565b63ffffffff1660408301526110f1602082611f9d565b90506110fe602082611f9d565b90506111256001611110836020611f9d565b61111a9190611fb0565b6020850151906112c1565b60ff1660c0830152611138602082611f9d565b9050600061115382856020015161131d90919063ffffffff16565b9050611160602083611f9d565b602085015190925061117390838361137b565b60e08401526111828183611f9d565b9150818460200151516111959190611fb0565b61119f9083611f9d565b915083602001515182146111fa5760405162461bcd60e51b815260206004820181905260248201527f6661696c656420746f20706172736520776f726d686f6c65206d65737361676560448201526064015b60405180910390fd5b5050919050565b600061120e826008611f9d565b835110156112555760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b60448201526064016111f1565b50818101600801515b92915050565b6000611271826004611f9d565b835110156112b85760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b60448201526064016111f1565b50016004015190565b60006112ce826001611f9d565b835110156113145760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016111f1565b50016001015190565b600061132a826020611f9d565b835110156113725760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016111f1565b50016020015190565b60608161138981601f611f9d565b10156113c85760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016111f1565b6113d28284611f9d565b845110156114165760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016111f1565b606082158015611435576040519150600082526020820160405261147f565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561146e578051835260209283019201611456565b5050858452601f01601f1916604052505b50949350505050565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561151b5761151b6114e3565b60405290565b60405161016081016001600160401b038111828210171561151b5761151b6114e3565b604080519081016001600160401b038111828210171561151b5761151b6114e3565b604051601f8201601f191681016001600160401b038111828210171561158e5761158e6114e3565b604052919050565b60ff811681146100cf57600080fd5b80356115b081611596565b919050565b63ffffffff811681146100cf57600080fd5b80356115b0816115b5565b61ffff811681146100cf57600080fd5b80356115b0816115d2565b80356001600160401b03811681146115b057600080fd5b600082601f83011261161557600080fd5b81356001600160401b0381111561162e5761162e6114e3565b611641601f8201601f1916602001611566565b81815284602083860101111561165657600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b0382111561168c5761168c6114e3565b5060051b60200190565b600082601f8301126116a757600080fd5b813560206116bc6116b783611673565b611566565b82815260079290921b840181019181810190868411156116db57600080fd5b8286015b8481101561174057608081890312156116f85760008081fd5b6117006114f9565b81358152848201358582015260408083013561171b81611596565b9082015260608281013561172e81611596565b908201528352918301916080016116df565b509695505050505050565b60006020828403121561175d57600080fd5b81356001600160401b038082111561177457600080fd5b90830190610160828603121561178957600080fd5b611791611521565b61179a836115a5565b81526117a8602084016115c7565b60208201526117b9604084016115c7565b60408201526117ca606084016115e2565b6060820152608083013560808201526117e560a084016115ed565b60a08201526117f660c084016115a5565b60c082015260e08301358281111561180d57600080fd5b61181987828601611604565b60e08301525061010061182d8185016115c7565b90820152610120838101358381111561184557600080fd5b61185188828701611696565b91830191909152506101409283013592810192909252509392505050565b60005b8381101561188a578181015183820152602001611872565b50506000910152565b600081518084526118ab81602086016020860161186f565b601f01601f19169290920160200192915050565b6020815260006118d26020830184611893565b9392505050565b6000602082840312156118eb57600080fd5b81356001600160401b0381111561190157600080fd5b61190d84828501611604565b949350505050565b60006020828403121561192757600080fd5b5035919050565b60006040828403121561194057600080fd5b611948611544565b905081356001600160401b038082111561196157600080fd5b818401915084601f83011261197557600080fd5b813560206119856116b783611673565b82815260059290921b840181019181810190888411156119a457600080fd5b948201945b838610156119c2578535825294820194908201906119a9565b865250858101359350828411156119d857600080fd5b6119e487858801611604565b818601525050505092915050565b80356001600160a01b03811681146115b057600080fd5b600080600060608486031215611a1e57600080fd5b83356001600160401b03811115611a3457600080fd5b611a408682870161192e565b9350506020840135611a51816115d2565b9150611a5f604085016119f2565b90509250925092565b600082601f830112611a7957600080fd5b81356020611a896116b783611673565b82815260059290921b84018101918181019086841115611aa857600080fd5b8286015b848110156117405780356001600160401b03811115611acb5760008081fd5b611ad98986838b010161192e565b845250918301918301611aac565b60008060008060808587031215611afd57600080fd5b84356001600160401b03811115611b1357600080fd5b611b1f87828801611a68565b9450506020850135611b30816115b5565b92506040850135611b40816115d2565b9150611b4e606086016119f2565b905092959194509250565b600060208284031215611b6b57600080fd5b81356001600160401b03811115611b8157600080fd5b61190d84828501611a68565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611c2e57898403603f19018652825180518886528051898701819052908a0190849060608801905b80831015611c015783518252928c019260019290920191908c0190611be1565b50928b0151878403888d015292611c188185611893565b998c019997505050938901935050600101611bb5565b50919998505050505050505050565b600080600060608486031215611c5257600080fd5b8351611c5d81611596565b602085015160409095015190969495509392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c9c57600080fd5b81516118d2816115b5565b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561125e5761125e611ca7565b60008151611ce881856020860161186f565b9290920192915050565b600060ff60f81b808b60f81b16835263ffffffff60e01b8a60e01b166001840152808960f81b166005840152808860f81b166006840152866007840152856027840152808560f81b166047840152508251611d5481604885016020870161186f565b919091016048019998505050505050505050565b600060208284031215611d7a57600080fd5b81516118d2816115d2565b600060208284031215611d9757600080fd5b5051919050565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b1660328201528151600090611e1281603385016020870161186f565b9190910160330198975050505050505050565b60ff818116838216019081111561125e5761125e611ca7565b600060018201611e5057611e50611ca7565b5060010190565b60008551611e69818460208a0161186f565b60f886901b6001600160f81b03191690830190815260e085901b6001600160e01b03191660018201528351611ea581600584016020880161186f565b016005019695505050505050565b600060ff821660ff8103611ec957611ec9611ca7565b60010192915050565b60008151602080840160005b83811015611efa57815187529582019590820190600101611ede565b509495945050505050565b60006118d28284611ed2565b600060ff60f81b60f8818f821b16845263ffffffff60e01b8e60e01b166001850152818d821b166005850152818c821b1660068501528a60078501528960278501528189821b1660478501528188821b166048850152611f746049850188611ed2565b8287831b168152611f886001820187611cd6565b93505050509c9b505050505050505050505050565b8082018082111561125e5761125e611ca7565b8181038181111561125e5761125e611ca756fea26469706673582212209a46bdb4629449bd4ac8b4597418e0a99a852275598557e7578a5a4efa98fbef64736f6c634300081100330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d";

type SigningWormholeSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SigningWormholeSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SigningWormholeSimulator__factory extends ContractFactory {
  constructor(...args: SigningWormholeSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    wormhole_: PromiseOrValue<string>,
    devnetGuardian: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SigningWormholeSimulator> {
    return super.deploy(
      wormhole_,
      devnetGuardian,
      overrides || {}
    ) as Promise<SigningWormholeSimulator>;
  }
  override getDeployTransaction(
    wormhole_: PromiseOrValue<string>,
    devnetGuardian: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      wormhole_,
      devnetGuardian,
      overrides || {}
    );
  }
  override attach(address: string): SigningWormholeSimulator {
    return super.attach(address) as SigningWormholeSimulator;
  }
  override connect(signer: Signer): SigningWormholeSimulator__factory {
    return super.connect(signer) as SigningWormholeSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SigningWormholeSimulatorInterface {
    return new utils.Interface(_abi) as SigningWormholeSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SigningWormholeSimulator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SigningWormholeSimulator;
  }
}
