/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FakeWormholeSimulator,
  FakeWormholeSimulatorInterface,
} from "../../WormholeSimulator.sol/FakeWormholeSimulator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MockWormhole",
        name: "initWormhole",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm_",
        type: "tuple",
      },
    ],
    name: "encodeAndSignMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct IWormhole.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IWormhole.VM",
        name: "vm_",
        type: "tuple",
      },
    ],
    name: "encodeObservation",
    outputs: [
      {
        internalType: "bytes",
        name: "encodedObservation",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log[]",
        name: "logs",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
    ],
    name: "fetchSignedBatchVAAFromLogs",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
    ],
    name: "fetchSignedMessageFromLogs",
    outputs: [
      {
        internalType: "bytes",
        name: "signedMessage",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log[]",
        name: "logs",
        type: "tuple[]",
      },
    ],
    name: "fetchWormholeMessageFromLog",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Vm.Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "invalidateVM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract MockWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161191938038061191983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611886806100936000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806364bb9bfb1161005b57806364bb9bfb146100f157806384acd1bb14610104578063920539af1461012f5780639404495d1461014257600080fd5b80630e6452951461008d5780631e5a2802146100b657806323aa2a9d146100cb5780634603c12a146100de575b600080fd5b6100a061009b36600461106f565b610162565b6040516100ad91906111e3565b60405180910390f35b6100c96100c43660046111fd565b610226565b005b6100c96100d9366004611239565b61028b565b6100a06100ec36600461132d565b6102bc565b6100a06100ff36600461106f565b610306565b600054610117906001600160a01b031681565b6040516001600160a01b0390911681526020016100ad565b6100a061013d366004611409565b610357565b610155610150366004611479565b610784565b6040516100ad91906114ad565b6060600061016f83610306565b905061017a81610940565b610140840152825160005460408051631cfe795160e01b815290516001600160a01b0390921691631cfe7951916004808201926020929091908290030181865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f0919061155d565b60405161020f9291906001906000908190819081908990602001611596565b604051602081830303815290604052915050919050565b600054604051630f2d140160e11b81526001600160a01b0390911690631e5a2802906102569084906004016111e3565b600060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b5050505050565b6000546040516323aa2a9d60e01b8152600481018390526001600160a01b03909116906323aa2a9d90602401610256565b606060006102c985610979565b6001815263ffffffff4216602082015261ffff851660608201526001600160a01b038416608082015290506102fd81610162565b95945050505050565b606081602001518260400151836060015184608001518560a001518660c001518760e00151604051602001610341979695949392919061160c565b6040516020818303038152906040529050919050565b606060008086516001600160401b0381111561037557610375610e1a565b6040519080825280602002602001820160405280156103ae57816020015b61039b610dbf565b8152602001906001900390816103935790505b50905060005b87518110156104d9576103df8882815181106103d2576103d2611693565b6020026020010151610979565b8282815181106103f1576103f1611693565b60200260200101819052504282828151811061040f5761040f611693565b60200260200101516020019063ffffffff16908163ffffffff16815250508582828151811061044057610440611693565b60200260200101516060019061ffff16908161ffff1681525050846001600160a01b031660001b82828151811061047957610479611693565b602002602001015160800181815250508663ffffffff168282815181106104a2576104a2611693565b60200260200101516040015163ffffffff16036104c7576104c46001846116bf565b92505b806104d1816116d8565b9150506103b4565b50606060008360ff166001600160401b038111156104f9576104f9610e1a565b604051908082528060200260200182016040528015610522578160200160208202803683370190505b5090506000805b8a518110156106d2578963ffffffff1685828151811061054b5761054b611693565b60200260200101516040015163ffffffff16036106c057600085828151811061057657610576611693565b60200260200101516020015186838151811061059457610594611693565b6020026020010151604001518784815181106105b2576105b2611693565b6020026020010151606001518885815181106105d0576105d0611693565b6020026020010151608001518986815181106105ee576105ee611693565b602002602001015160a001518a878151811061060c5761060c611693565b602002602001015160c001518b888151811061062a5761062a611693565b602002602001015160e0015160405160200161064c979695949392919061160c565b604051602081830303815290604052905061066681610940565b848460ff168151811061067b5761067b611693565b602002602001018181525050848382518360405160200161069f94939291906116f1565b604051602081830303815290604052945082806106bb9061174d565b935050505b806106ca816116d8565b915050610529565b5060005460408051631cfe795160e01b815290516002926001600160a01b031691631cfe79519160048083019260209291908290030181865afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610741919061155d565b6040516107669291906001906000908190819081908d908b9082908e9060200161176c565b60405160208183030381529060405295505050505050949350505050565b60606000805b8351811015610811577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b28482815181106107c6576107c6611693565b6020026020010151600001516000815181106107e4576107e4611693565b6020026020010151036107ff576107fc60018361182a565b91505b80610809816116d8565b91505061078a565b506000816001600160401b0381111561082c5761082c610e1a565b60405190808252806020026020018201604052801561087157816020015b604080518082019091526060808252602082015281526020019060019003908161084a5790505b5090506000805b8551811015610936577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b28682815181106108b4576108b4611693565b6020026020010151600001516000815181106108d2576108d2611693565b602002602001015103610924578581815181106108f1576108f1611693565b602002602001015183838151811061090b5761090b611693565b602090810291909101015261092160018361182a565b91505b8061092e816116d8565b915050610878565b5090949350505050565b6000818051906020012060405160200161095c91815260200190565b604051602081830303815290604052805190602001209050919050565b610981610dbf565b6000826000015160018151811061099a5761099a611693565b60200260200101518260800181815250506109d260088260206109bd919061182a565b6109c7919061183d565b602085015190610b38565b6001600160401b031660a08301526109eb60208261182a565b9050610a1260046109fd83602061182a565b610a07919061183d565b602085015190610b9b565b63ffffffff166040830152610a2860208261182a565b9050610a3560208261182a565b9050610a5c6001610a4783602061182a565b610a51919061183d565b602085015190610bf8565b60ff1660c0830152610a6f60208261182a565b90506000610a8a828560200151610c5490919063ffffffff16565b9050610a9760208361182a565b6020850151909250610aaa908383610cb2565b60e0840152610ab9818361182a565b915081846020015151610acc919061183d565b610ad6908361182a565b91508360200151518214610b315760405162461bcd60e51b815260206004820181905260248201527f6661696c656420746f20706172736520776f726d686f6c65206d65737361676560448201526064015b60405180910390fd5b5050919050565b6000610b4582600861182a565b83511015610b8c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606401610b28565b50818101600801515b92915050565b6000610ba882600461182a565b83511015610bef5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606401610b28565b50016004015190565b6000610c0582600161182a565b83511015610c4b5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610b28565b50016001015190565b6000610c6182602061182a565b83511015610ca95760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610b28565b50016020015190565b606081610cc081601f61182a565b1015610cff5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610b28565b610d09828461182a565b84511015610d4d5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610b28565b606082158015610d6c5760405191506000825260208201604052610db6565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610da5578051835260209283019201610d8d565b5050858452601f01601f1916604052505b50949350505050565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715610e5257610e52610e1a565b60405290565b60405161016081016001600160401b0381118282101715610e5257610e52610e1a565b604080519081016001600160401b0381118282101715610e5257610e52610e1a565b604051601f8201601f191681016001600160401b0381118282101715610ec557610ec5610e1a565b604052919050565b803560ff81168114610ede57600080fd5b919050565b63ffffffff81168114610ef557600080fd5b50565b8035610ede81610ee3565b803561ffff81168114610ede57600080fd5b80356001600160401b0381168114610ede57600080fd5b600082601f830112610f3d57600080fd5b81356001600160401b03811115610f5657610f56610e1a565b610f69601f8201601f1916602001610e9d565b818152846020838601011115610f7e57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115610fb457610fb4610e1a565b5060051b60200190565b600082601f830112610fcf57600080fd5b81356020610fe4610fdf83610f9b565b610e9d565b82815260079290921b8401810191818101908684111561100357600080fd5b8286015b8481101561106457608081890312156110205760008081fd5b611028610e30565b8135815284820135858201526040611041818401610ecd565b908201526060611052838201610ecd565b90820152835291830191608001611007565b509695505050505050565b60006020828403121561108157600080fd5b81356001600160401b038082111561109857600080fd5b9083019061016082860312156110ad57600080fd5b6110b5610e58565b6110be83610ecd565b81526110cc60208401610ef8565b60208201526110dd60408401610ef8565b60408201526110ee60608401610f03565b60608201526080830135608082015261110960a08401610f15565b60a082015261111a60c08401610ecd565b60c082015260e08301358281111561113157600080fd5b61113d87828601610f2c565b60e083015250610100611151818501610ef8565b90820152610120838101358381111561116957600080fd5b61117588828701610fbe565b91830191909152506101409283013592810192909252509392505050565b60005b838110156111ae578181015183820152602001611196565b50506000910152565b600081518084526111cf816020860160208601611193565b601f01601f19169290920160200192915050565b6020815260006111f660208301846111b7565b9392505050565b60006020828403121561120f57600080fd5b81356001600160401b0381111561122557600080fd5b61123184828501610f2c565b949350505050565b60006020828403121561124b57600080fd5b5035919050565b60006040828403121561126457600080fd5b61126c610e7b565b905081356001600160401b038082111561128557600080fd5b818401915084601f83011261129957600080fd5b813560206112a9610fdf83610f9b565b82815260059290921b840181019181810190888411156112c857600080fd5b948201945b838610156112e6578535825294820194908201906112cd565b865250858101359350828411156112fc57600080fd5b61130887858801610f2c565b818601525050505092915050565b80356001600160a01b0381168114610ede57600080fd5b60008060006060848603121561134257600080fd5b83356001600160401b0381111561135857600080fd5b61136486828701611252565b93505061137360208501610f03565b915061138160408501611316565b90509250925092565b600082601f83011261139b57600080fd5b813560206113ab610fdf83610f9b565b82815260059290921b840181019181810190868411156113ca57600080fd5b8286015b848110156110645780356001600160401b038111156113ed5760008081fd5b6113fb8986838b0101611252565b8452509183019183016113ce565b6000806000806080858703121561141f57600080fd5b84356001600160401b0381111561143557600080fd5b6114418782880161138a565b945050602085013561145281610ee3565b925061146060408601610f03565b915061146e60608601611316565b905092959194509250565b60006020828403121561148b57600080fd5b81356001600160401b038111156114a157600080fd5b6112318482850161138a565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561154e57898403603f19018652825180518886528051898701819052908a0190849060608801905b808310156115215783518252928c019260019290920191908c0190611501565b50928b0151878403888d01529261153881856111b7565b998c0199975050509389019350506001016114d5565b50919998505050505050505050565b60006020828403121561156f57600080fd5b81516111f681610ee3565b6000815161158c818560208601611193565b9290920192915050565b600060ff60f81b808b60f81b16835263ffffffff60e01b8a60e01b166001840152808960f81b166005840152808860f81b166006840152866007840152856027840152808560f81b1660478401525082516115f8816048850160208701611193565b919091016048019998505050505050505050565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b1660328201528151600090611680816033850160208701611193565b9190910160330198975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff8181168382160190811115610b9557610b956116a9565b6000600182016116ea576116ea6116a9565b5060010190565b60008551611703818460208a01611193565b60f886901b6001600160f81b03191690830190815260e085901b6001600160e01b0319166001820152835161173f816005840160208801611193565b016005019695505050505050565b600060ff821660ff8103611763576117636116a9565b60010192915050565b600060ff60f81b808e60f81b168352600163ffffffff60e01b8e60e01b1681850152818d60f81b166005850152818c60f81b1660068501528a6007850152896027850152818960f81b166047850152818860f81b1660488501526049840191508651602080890160005b838110156117f15781518652948201949082019084016117d6565b5050505061180b828760f81b6001600160f81b0319169052565b6118178183018661157a565b9f9e505050505050505050505050505050565b80820180821115610b9557610b956116a9565b81810381811115610b9557610b956116a956fea2646970667358221220c9b139839c3531b50ec0aa7d4b35df92df4f56afa71fd08637dbaeffb6b779a164736f6c63430008110033";

type FakeWormholeSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FakeWormholeSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FakeWormholeSimulator__factory extends ContractFactory {
  constructor(...args: FakeWormholeSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initWormhole: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FakeWormholeSimulator> {
    return super.deploy(
      initWormhole,
      overrides || {}
    ) as Promise<FakeWormholeSimulator>;
  }
  override getDeployTransaction(
    initWormhole: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initWormhole, overrides || {});
  }
  override attach(address: string): FakeWormholeSimulator {
    return super.attach(address) as FakeWormholeSimulator;
  }
  override connect(signer: Signer): FakeWormholeSimulator__factory {
    return super.connect(signer) as FakeWormholeSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeWormholeSimulatorInterface {
    return new utils.Interface(_abi) as FakeWormholeSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeWormholeSimulator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FakeWormholeSimulator;
  }
}
