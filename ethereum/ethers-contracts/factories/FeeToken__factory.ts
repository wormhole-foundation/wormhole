/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FeeToken, FeeTokenInterface } from "../FeeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "nativeContract_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue_",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue_",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "sequence_",
        type: "uint64",
      },
    ],
    name: "updateDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061127e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637ecebe00116100ad578063a18cd7c611610071578063a18cd7c61461027a578063a457c2d71461028d578063a9059cbb146102a0578063c71f4615146102b3578063dd62ed3e146102c657600080fd5b80637ecebe00146101fa5780638da5cb5b1461022357806395d89b411461023e5780639a8a0592146102465780639dc29fac1461026757600080fd5b8063313ce567116100f4578063313ce5671461018c57806339509351146101a15780633d6c043b146101b457806340c10f19146101bc57806370a08231146101d157600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102ff565b60405161013b91906110e9565b60405180910390f35b610157610152366004610edb565b610328565b604051901515815260200161013b565b6003545b60405190815260200161013b565b610157610187366004610ea0565b61033e565b60045460405160ff909116815260200161013b565b6101576101af366004610edb565b6103f4565b60085461016b565b6101cf6101ca366004610edb565b61042b565b005b61016b6101df366004610e4d565b6001600160a01b031660009081526005602052604090205490565b61016b610208366004610e4d565b6001600160a01b03166000908152600e602052604090205490565b6007546040516001600160a01b03909116815260200161013b565b61012e610463565b600754600160a81b900461ffff1660405161ffff909116815260200161013b565b6101cf610275366004610edb565b6104f8565b6101cf610288366004610f04565b61052c565b61015761029b366004610edb565b610602565b6101576102ae366004610edb565b61069d565b6101cf6102c1366004610f75565b6106aa565b61016b6102d4366004610e6e565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b60405160609061031490600090602001611033565b604051602081830303815290604052905090565b60006103353384846107a9565b50600192915050565b600061034b8484846108ce565b6001600160a01b0384166000908152600660209081526040808320338452909152902054828110156103d55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e985336103e486856111ca565b6107a9565b506001949350505050565b3360008181526006602090815260408083206001600160a01b038716845290915281205490916103359185906103e4908690611173565b6007546001600160a01b031633146104555760405162461bcd60e51b81526004016103cc9061113c565b61045f8282610ac8565b5050565b606060006001018054610475906111e1565b80601f01602080910402602001604051908101604052809291908181526020018280546104a1906111e1565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050505050905090565b6007546001600160a01b031633146105225760405162461bcd60e51b81526004016103cc9061113c565b61045f8282610baa565b6007546001600160a01b031633146105565760405162461bcd60e51b81526004016103cc9061113c565b60025467ffffffffffffffff8083169116106105b45760405162461bcd60e51b815260206004820152601e60248201527f63757272656e74206d6574616461746120697320757020746f2064617465000060448201526064016103cc565b82516105c7906000906020860190610cf9565b5081516105db906001906020850190610cf9565b506002805467ffffffffffffffff191667ffffffffffffffff929092169190911790555050565b3360009081526006602090815260408083206001600160a01b0386168452909152812054828110156106845760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cc565b61069333856103e486856111ca565b5060019392505050565b60006103353384846108ce565b600754600160a01b900460ff16156106fa5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016103cc565b6007805460ff60a01b1916600160a01b17905586516107209060009060208a0190610cf9565b508551610734906001906020890190610cf9565b506004805460ff90961660ff19909616959095179094556002805467ffffffffffffffff90941667ffffffffffffffff19909416939093179092556007805461ffff909316600160a81b02600162ffff0160a01b03199093166001600160a01b03909216919091179190911790556008555050565b6001600160a01b03831661080b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b03821661086c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166109325760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166109945760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b03831660009081526005602052604090205481811015610a0c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b610a1682826111ca565b6001600160a01b038516600090815260056020526040902055600a610a3c8360096111ab565b610a46919061118b565b6001600160a01b03841660009081526005602052604081208054909190610a6e908490611173565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aba91815260200190565b60405180910390a350505050565b6001600160a01b038216610b1e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b8060006003016000828254610b339190611173565b90915550506001600160a01b03821660009081526005602052604081208054839290610b60908490611173565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c0a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b03821660009081526005602052604090205481811015610c7e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b610c8882826111ca565b6001600160a01b03841660009081526005602052604081209190915560038054849290610cb69084906111ca565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108c1565b828054610d05906111e1565b90600052602060002090601f016020900481019282610d275760008555610d6d565b82601f10610d4057805160ff1916838001178555610d6d565b82800160010185558215610d6d579182015b82811115610d6d578251825591602001919060010190610d52565b50610d79929150610d7d565b5090565b5b80821115610d795760008155600101610d7e565b80356001600160a01b0381168114610da957600080fd5b919050565b600082601f830112610dbe578081fd5b813567ffffffffffffffff80821115610dd957610dd9611232565b604051601f8301601f19908116603f01168101908282118183101715610e0157610e01611232565b81604052838152866020858801011115610e19578485fd5b8360208701602083013792830160200193909352509392505050565b803567ffffffffffffffff81168114610da957600080fd5b600060208284031215610e5e578081fd5b610e6782610d92565b9392505050565b60008060408385031215610e80578081fd5b610e8983610d92565b9150610e9760208401610d92565b90509250929050565b600080600060608486031215610eb4578081fd5b610ebd84610d92565b9250610ecb60208501610d92565b9150604084013590509250925092565b60008060408385031215610eed578182fd5b610ef683610d92565b946020939093013593505050565b600080600060608486031215610f18578283fd5b833567ffffffffffffffff80821115610f2f578485fd5b610f3b87838801610dae565b94506020860135915080821115610f50578384fd5b50610f5d86828701610dae565b925050610f6c60408501610e35565b90509250925092565b600080600080600080600060e0888a031215610f8f578283fd5b873567ffffffffffffffff80821115610fa6578485fd5b610fb28b838c01610dae565b985060208a0135915080821115610fc7578485fd5b50610fd48a828b01610dae565b965050604088013560ff81168114610fea578384fd5b9450610ff860608901610e35565b935061100660808901610d92565b925060a088013561ffff8116811461101c578283fd5b8092505060c0880135905092959891949750929550565b600080835482600182811c91508083168061104f57607f831692505b602080841082141561106f57634e487b7160e01b87526022600452602487fd5b8180156110835760018114611094576110c0565b60ff198616895284890196506110c0565b60008a815260209020885b868110156110b85781548b82015290850190830161109f565b505084890196505b5050505050506110e1816a2028576f726d686f6c652960a81b8152600b0190565b949350505050565b6000602080835283518082850152825b81811015611115578581018301518582016040015282016110f9565b818111156111265783604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b600082198211156111865761118661121c565b500190565b6000826111a657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111c5576111c561121c565b500290565b6000828210156111dc576111dc61121c565b500390565b600181811c908216806111f557607f821691505b6020821081141561121657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212207be5b215f770128ac2dbc51dc231ae429c0fbec6194d3d04c30bd83fe328699664736f6c63430008040033";

type FeeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeToken__factory extends ContractFactory {
  constructor(...args: FeeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeToken> {
    return super.deploy(overrides || {}) as Promise<FeeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeToken {
    return super.attach(address) as FeeToken;
  }
  override connect(signer: Signer): FeeToken__factory {
    return super.connect(signer) as FeeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeTokenInterface {
    return new utils.Interface(_abi) as FeeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeToken {
    return new Contract(address, _abi, signerOrProvider) as FeeToken;
  }
}
