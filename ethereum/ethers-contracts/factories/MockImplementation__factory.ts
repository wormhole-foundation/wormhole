/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockImplementation,
  MockImplementationInterface,
} from "../MockImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "GuardianSetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "LogMessagePublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGuardianSetIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "getGuardianSet",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct Structs.GuardianSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuardianSetExpiry",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "emitter",
        type: "address",
      },
    ],
    name: "nextSequence",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "parseAndVerifyVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedUpgrade",
        type: "bytes",
      },
    ],
    name: "parseContractUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "newContract",
            type: "address",
          },
        ],
        internalType: "struct GovernanceStructs.ContractUpgrade",
        name: "cu",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedUpgrade",
        type: "bytes",
      },
    ],
    name: "parseGuardianSetUpgrade",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "keys",
                type: "address[]",
              },
              {
                internalType: "uint32",
                name: "expirationTime",
                type: "uint32",
              },
            ],
            internalType: "struct Structs.GuardianSet",
            name: "newGuardianSet",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "newGuardianSetIndex",
            type: "uint32",
          },
        ],
        internalType: "struct GovernanceStructs.GuardianSetUpgrade",
        name: "gsu",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedRecoverChainId",
        type: "bytes",
      },
    ],
    name: "parseRecoverChainId",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "evmChainId",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "newChainId",
            type: "uint16",
          },
        ],
        internalType: "struct GovernanceStructs.RecoverChainId",
        name: "rci",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedSetMessageFee",
        type: "bytes",
      },
    ],
    name: "parseSetMessageFee",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "messageFee",
            type: "uint256",
          },
        ],
        internalType: "struct GovernanceStructs.SetMessageFee",
        name: "smf",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedTransferFees",
        type: "bytes",
      },
    ],
    name: "parseTransferFees",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "module",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "chain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "recipient",
            type: "bytes32",
          },
        ],
        internalType: "struct GovernanceStructs.TransferFees",
        name: "tf",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "parseVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "publishMessage",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numGuardians",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "numSignaturesRequiredForQuorum",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitContractUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitNewGuardianSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitRecoverChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitSetMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_vm",
        type: "bytes",
      },
    ],
    name: "submitTransferFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testNewImplementationActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fakeChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "fakeEvmChainId",
        type: "uint256",
      },
    ],
    name: "testOverwriteEVMChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "guardianIndex",
            type: "uint8",
          },
        ],
        internalType: "struct Structs.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct Structs.GuardianSet",
        name: "guardianSet",
        type: "tuple",
      },
    ],
    name: "verifySignatures",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    name: "verifyVM",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506138a6806100206000396000f3fe6080604052600436106101dc5760003560e01c806393df337e11610102578063cb4cfea811610095578063f42bc64111610064578063f42bc6411461076f578063f8ce560a1461078f578063f951975a146107af578063fbe3c2cd146107dc57610243565b8063cb4cfea8146106a4578063d60b347f146106fe578063e039f22414610737578063eb8d3f121461074c57610243565b8063b172b222116100d1578063b172b22214610616578063b19a437e1461062b578063c054a2e01461063e578063c0fd8bde1461067557610243565b806393df337e146105815780639a8a0592146105a1578063a0cce1b3146105c9578063a9e11893146105e957610243565b80634cf842b51161017a57806364d42b171161014957806364d42b17146105095780636606b4e01461051e5780638129fc1c1461053e578063875be02a1461055357610243565b80634cf842b5146103d55780634fdc60fa1461042c578063515f32471461048f5780635cb8cae2146104e957610243565b80631a90a219116101b65780631a90a2191461033a5780631cfe7951146103595780631f8cdb2b146103855780632c3c02a4146103a557610243565b80630319e59c1461027957806304ca84cf146102eb578063178149e71461031857610243565b366102435760405162461bcd60e51b815260206004820152602c60248201527f74686520576f726d686f6c6520636f6e747261637420646f6573206e6f74206160448201526b63636570742061737365747360a01b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152600b60248201526a1d5b9cdd5c1c1bdc9d195960aa1b604482015260640161023a565b34801561028557600080fd5b50610299610294366004612e44565b6107fb565b6040516102e29190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b3480156102f757600080fd5b5061030b610306366004612e44565b610951565b6040516102e29190612edf565b34801561032457600080fd5b50610338610333366004612e44565b610b68565b005b34801561034657600080fd5b506007545b6040519081526020016102e2565b34801561036557600080fd5b5060035463ffffffff165b60405163ffffffff90911681526020016102e2565b34801561039157600080fd5b5060015b60405190151581526020016102e2565b3480156103b157600080fd5b506103956103c0366004612f3c565b60009081526005602052604090205460ff1690565b3480156103e157600080fd5b506104146103f0366004612f6c565b6001600160a01b03166000908152600460205260409020546001600160401b031690565b6040516001600160401b0390911681526020016102e2565b34801561043857600080fd5b5061044c610447366004612e44565b610ca1565b6040516102e291908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b34801561049b57600080fd5b506104af6104aa366004612e44565b610ddd565b6040516102e291908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b3480156104f557600080fd5b50610338610504366004612e44565b610f0c565b34801561051557600080fd5b5060085461034b565b34801561052a57600080fd5b50610338610539366004612e44565b611051565b34801561054a57600080fd5b50610338611261565b34801561055f57600080fd5b5061057361056e3660046130b0565b6114e8565b6040516102e2929190613224565b34801561058d57600080fd5b5061033861059c366004612e44565b611501565b3480156105ad57600080fd5b5060005461ffff165b60405161ffff90911681526020016102e2565b3480156105d557600080fd5b506105736105e436600461323f565b61163d565b3480156105f557600080fd5b50610609610604366004612e44565b6118b8565b6040516102e2919061349b565b34801561062257600080fd5b5060015461034b565b6104146106393660046134ae565b611c50565b34801561064a57600080fd5b5061033861065936600461350b565b6000805461ffff191661ffff9390931692909217909155600855565b34801561068157600080fd5b50610695610690366004613535565b611cf0565b6040516102e2939291906135a6565b3480156106b057600080fd5b506106c46106bf366004612e44565b611d54565b6040516102e291908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b34801561070a57600080fd5b50610395610719366004612f6c565b6001600160a01b031660009081526006602052604090205460ff1690565b34801561074357600080fd5b50610395611e85565b34801561075857600080fd5b50600354640100000000900463ffffffff16610370565b34801561077b57600080fd5b5061033861078a366004612e44565b611e98565b34801561079b57600080fd5b5061034b6107aa366004612f3c565b611faa565b3480156107bb57600080fd5b506107cf6107ca3660046135dd565b61201a565b6040516102e291906135f8565b3480156107e857600080fd5b5060005462010000900461ffff166105b6565b6040805160a08101825260008082526020820181905291810182905260608101829052608081018290529061083083826120b9565b825261083d602082613621565b90506108498382612117565b60ff16602083015261085c600182613621565b9050816020015160ff166004146108ac5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b604482015260640161023a565b6108b68382612173565b61ffff1660408301526108ca600282613621565b90506108d683826121d0565b60608301526108e6602082613621565b90506108f283826120b9565b6080830152610902602082613621565b90508083511461094b5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b604482015260640161023a565b50919050565b610959612bf3565b600061096583826120b9565b8252610972602082613621565b905061097e8382612117565b60ff166020830152610991600182613621565b9050816020015160ff166002146109ea5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e53657455706772616465000000000000604482015260640161023a565b6109f48382612173565b61ffff166040830152610a08600282613621565b9050610a148382612225565b63ffffffff166080830152610a2a600482613621565b90506000610a388483612117565b9050610a45600183613621565b915060405180604001604052808260ff166001600160401b03811115610a6d57610a6d612d22565b604051908082528060200260200182016040528015610a96578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff16811015610b1057610ac18584612282565b606085015151805183908110610ad957610ad9613634565b6001600160a01b0390921660209283029190910190910152610afc601484613621565b925080610b088161364a565b915050610aac565b5081845114610b615760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e53657455706772616465000000000000604482015260640161023a565b5050919050565b610b70611e85565b610ba95760405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b604482015260640161023a565b6000610bb4826118b8565b9050600080610bc2836122e7565b91509150818190610be65760405162461bcd60e51b815260040161023a9190613663565b506000610bf68460e00151611d54565b805190915063436f726514610c1d5760405162461bcd60e51b815260040161023a90613676565b46816040015114610c645760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b604482015260640161023a565b610c7284610140015161245d565b610c7f8160400151612478565b60608101516000805461ffff191661ffff9092169190911790555b5050505050565b604080516080810182526000808252602082018190529181018290526060810182905290610ccf83826120b9565b8252610cdc602082613621565b9050610ce88382612117565b60ff166020830152610cfb600182613621565b9050816020015160ff16600114610d4e5760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b604482015260640161023a565b610d588382612173565b61ffff166040830152610d6c600282613621565b9050610d7883826120b9565b6001600160a01b03166060830152610d91602082613621565b90508083511461094b5760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b604482015260640161023a565b604080516080810182526000808252602082018190529181018290526060810182905290610e0b83826120b9565b8252610e18602082613621565b9050610e248382612117565b60ff166020830152610e37600182613621565b9050816020015160ff16600314610e885760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b604482015260640161023a565b610e928382612173565b61ffff166040830152610ea6600282613621565b9050610eb283826121d0565b6060830152610ec2602082613621565b90508083511461094b5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b604482015260640161023a565b610f14611e85565b15610f505760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b604482015260640161023a565b6000610f5b826118b8565b9050600080610f69836122e7565b91509150818190610f8d5760405162461bcd60e51b815260040161023a9190613663565b506000610f9d8460e00151610ca1565b805190915063436f726514610fe55760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b604482015260640161023a565b60005461ffff1661ffff16816040015161ffff16146110365760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b604482015260640161023a565b61104484610140015161245d565b610c9a81606001516124c1565b600061105c826118b8565b905060008061106a836122e7565b9150915081819061108e5760405162461bcd60e51b815260040161023a9190613663565b50600061109e8460e00151610951565b805190915063436f7265146110c55760405162461bcd60e51b815260040161023a90613676565b60005461ffff1661ffff16816040015161ffff161480156110eb57506110e9611e85565b155b806110fc5750604081015161ffff16155b6111385760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b604482015260640161023a565b6060810151515161118b5760405162461bcd60e51b815260206004820152601960248201527f6e657720677561726469616e2073657420697320656d70747900000000000000604482015260640161023a565b60035463ffffffff1661119f90600161369e565b63ffffffff16816080015163ffffffff16146112075760405162461bcd60e51b815260206004820152602160248201527f696e646578206d75737420696e63726561736520696e207374657073206f66206044820152603160f81b606482015260840161023a565b61121584610140015161245d565b61122c61122760035463ffffffff1690565b6125ee565b61123e81606001518260800151612626565b60808101516003805463ffffffff191663ffffffff909216919091179055610c9a565b60006112947f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506112b8816001600160a01b031660009081526006602052604090205460ff1690565b156112fb5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161023a565b611323816001600160a01b03166000908152600660205260409020805460ff19166001179055565b6008546000036114e55760008061133d60005461ffff1690565b90508061ffff1660020361135457600191506114d9565b8061ffff1660040361136957603891506114d9565b8061ffff1660050361137e57608991506114d9565b8061ffff166006036113945761a86a91506114d9565b8061ffff166007036113aa5761a51691506114d9565b8061ffff166009036113c257634e45415291506114d9565b8061ffff16600a036113d75760fa91506114d9565b8061ffff16600b036113ed576102ae91506114d9565b8061ffff16600c036114035761031391506114d9565b8061ffff16600d036114195761201991506114d9565b8061ffff16600e0361142f5761a4ec91506114d9565b8061ffff166010036114455761050491506114d9565b8061ffff1660110361145d57630e9ac0d691506114d9565b8061ffff166017036114735761a4b191506114d9565b8061ffff1660180361148857600a91506114d9565b8061ffff1660190361149d57606491506114d9565b60405162461bcd60e51b81526020600482015260116024820152702ab735b737bbb71031b430b4b71034b21760791b604482015260640161023a565b6114e282612478565b50505b50565b600060606114f7836001612700565b9094909350915050565b600061150c826118b8565b905060008061151a836122e7565b9150915081819061153e5760405162461bcd60e51b815260040161023a9190613663565b50600061154e8460e001516107fb565b805190915063436f7265146115755760405162461bcd60e51b815260040161023a90613676565b60005461ffff1661ffff16816040015161ffff1614801561159b5750611599611e85565b155b806115ac5750604081015161ffff16155b6115e85760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b604482015260640161023a565b6115f684610140015161245d565b608081015160608201516040516001600160a01b0383169180156108fc02916000818181858888f19350505050158015611634573d6000803e3d6000fd5b50505050505050565b8051516000906060908290815b865181101561189657600087828151811061166757611667613634565b60200260200101519050600060018a836040015184600001518560200151604051600081526020016040526040516116bb949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156116dd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117405760405162461bcd60e51b815260206004820152601f60248201527f65637265636f766572206661696c65642077697468207369676e617475726500604482015260640161023a565b82158061175657508460ff16826060015160ff16115b6117ae5760405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b606482015260840161023a565b6060820151945060ff851684116118075760405162461bcd60e51b815260206004820152601c60248201527f677561726469616e20696e646578206f7574206f6620626f756e647300000000604482015260640161023a565b8760000151826060015160ff168151811061182457611824613634565b60200260200101516001600160a01b0316816001600160a01b031614611881576000604051806040016040528060148152602001731593481cda59db985d1d5c99481a5b9d985b1a5960621b8152509650965050505050506118b0565b5050808061188e9061364a565b91505061164a565b506001604051806020016040528060008152509350935050505b935093915050565b6118c0612c4d565b60006118cc8382612117565b60ff1682526118dc600182613621565b9050816000015160ff166001146119355760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c65000000000000000000604482015260640161023a565b61193f8382612225565b63ffffffff16610100830152611956600482613621565b905060006119648483612117565b60ff169050611974600183613621565b9150806001600160401b0381111561198e5761198e612d22565b6040519080825280602002602001820160405280156119e057816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816119ac5790505b5061012084015260005b81811015611b17576119fc8584612117565b8461012001518281518110611a1357611a13613634565b602090810291909101015160ff909116606090910152611a34600184613621565b9250611a4085846120b9565b8461012001518281518110611a5757611a57613634565b60200260200101516000018181525050602083611a749190613621565b9250611a8085846120b9565b8461012001518281518110611a9757611a97613634565b60200260200101516020018181525050602083611ab49190613621565b9250611ac08584612117565b611acb90601b6136c2565b8461012001518281518110611ae257611ae2613634565b602090810291909101015160ff909116604090910152611b03600184613621565b925080611b0f8161364a565b9150506119ea565b506000611b3383848751611b2b91906136db565b879190612934565b90508080519060200120604051602001611b4f91815260200190565b60408051601f198184030181529190528051602090910120610140850152611b778584612225565b63ffffffff166020850152611b8d600484613621565b9250611b998584612225565b63ffffffff166040850152611baf600484613621565b9250611bbb8584612173565b61ffff166060850152611bcf600284613621565b9250611bdb85846120b9565b6080850152611beb602084613621565b9250611bf78584612a41565b6001600160401b031660a0850152611c10600884613621565b9250611c1c8584612117565b60ff1660c0850152611c2f600184613621565b9250611c4283848751611b2b91906136db565b60e085015250919392505050565b6000611c5b60075490565b3414611c975760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b604482015260640161023a565b611ca033612a9e565b9050336001600160a01b03167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b282868686604051611ce194939291906136ee565b60405180910390a29392505050565b611cf8612c4d565b60006060611d3b85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118b892505050565b9250611d48836000612700565b93969095509293505050565b604080516080810182526000808252602082018190529181018290526060810182905290611d8283826120b9565b8252611d8f602082613621565b9050611d9b8382612117565b60ff166020830152611dae600182613621565b9050816020015160ff16600514611e005760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b604482015260640161023a565b611e0a83826121d0565b6040830152611e1a602082613621565b9050611e268382612173565b61ffff166060830152611e3a600282613621565b90508083511461094b5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b604482015260640161023a565b600046611e9160085490565b1415905090565b6000611ea3826118b8565b9050600080611eb1836122e7565b91509150818190611ed55760405162461bcd60e51b815260040161023a9190613663565b506000611ee58460e00151610ddd565b805190915063436f726514611f2d5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b604482015260640161023a565b60005461ffff1661ffff16816040015161ffff16148015611f535750611f51611e85565b155b611f8f5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b604482015260640161023a565b611f9d84610140015161245d565b610c9a8160600151600755565b60006101008210611ff25760405162461bcd60e51b8152602060048201526012602482015271746f6f206d616e7920677561726469616e7360701b604482015260640161023a565b6003611fff836002613730565b6120099190613747565b612014906001613621565b92915050565b60408051808201825260608082526000602080840182905263ffffffff8616825260028152908490208451815492830281018401865294850182815293949390928492849184018282801561209857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161207a575b50505091835250506001919091015463ffffffff1660209091015292915050565b60006120c6826020613621565b8351101561210e5760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b604482015260640161023a565b50016020015190565b6000612124826001613621565b8351101561216a5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b604482015260640161023a565b50016001015190565b6000612180826002613621565b835110156121c75760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b604482015260640161023a565b50016002015190565b60006121dd826020613621565b8351101561210e5760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b604482015260640161023a565b6000612232826004613621565b835110156122795760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b604482015260640161023a565b50016004015190565b600061228f826014613621565b835110156122d75760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015260640161023a565b500160200151600160601b900490565b600060606000806122f7856114e8565b915091508161230c5760009590945092505050565b60035463ffffffff1663ffffffff1685610100015163ffffffff161461235257600060405180606001604052806022815260200161382d60229139935093505050915091565b60005462010000900461ffff1661ffff16856060015161ffff16146123ad576000604051806040016040528060168152602001753bb937b7339033b7bb32b93730b731b29031b430b4b760511b815250935093505050915091565b6001548560800151146123fd5760006040518060400160405280601981526020017f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000815250935093505050915091565b61014085015160009081526005602052604090205460ff161561244057600060405180606001604052806022815260200161384f60229139935093505050915091565b600160405180602001604052806000815250935093505050915091565b6000908152600560205260409020805460ff19166001179055565b4681146124bc5760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b604482015260640161023a565b600855565b60006124f47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506124ff82612b0e565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b0386169161254291613769565b600060405180830381855af49150503d806000811461257d576040519150601f19603f3d011682016040523d82523d6000602084013e612582565b606091505b50915091508181906125a75760405162461bcd60e51b815260040161023a9190613663565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b6125fb426201518061369e565b63ffffffff9182166000908152600260205260409020600101805463ffffffff191691909216179055565b81515160005b818110156126aa5783518051600091908390811061264c5761264c613634565b60200260200101516001600160a01b0316036126985760405162461bcd60e51b815260206004820152600b60248201526a496e76616c6964206b657960a81b604482015260640161023a565b806126a28161364a565b91505061262c565b5063ffffffff821660009081526002602090815260409091208451805186936126d7928492910190612ca8565b50602091909101516001909101805463ffffffff191663ffffffff909216919091179055505050565b60006060600061271485610100015161201a565b905083156127ea57602080860151604080880151606089015160808a015160a08b015160c08c015160e08d0151955160009861275298979101613785565b60405160208183030381529060405290506000818051906020012060405160200161277f91815260200190565b60405160208183030381529060405280519060200120905086610140015181146127e75760006040518060400160405280601a81526020017f766d2e6861736820646f65736e2774206d6174636820626f64790000000000008152509450945050505061292d565b50505b80515160000361282a5750506040805180820190915260148152731a5b9d985b1a590819dd585c991a585b881cd95d60621b60208201526000915061292d565b60035463ffffffff1663ffffffff1685610100015163ffffffff161415801561285c575042816020015163ffffffff16105b156128a057505060408051808201909152601881527f677561726469616e20736574206861732065787069726564000000000000000060208201526000915061292d565b8051516128ac90611faa565b8561012001515110156128e45750506040805180820190915260098152686e6f2071756f72756d60b81b60208201526000915061292d565b6000806128fc8761014001518861012001518561163d565b91509150816129135760009450925061292d915050565b600160405180602001604052806000815250945094505050505b9250929050565b60608161294281601f613621565b10156129815760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161023a565b61298b8284613621565b845110156129cf5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161023a565b6060821580156129ee5760405191506000825260208201604052612a38565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612a27578051835260209283019201612a0f565b5050858452601f01601f1916604052505b50949350505050565b6000612a4e826008613621565b83511015612a955760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b604482015260640161023a565b50016008015190565b6001600160a01b0381166000908152600460205260409020546001600160401b0316612b0982612acf83600161380c565b6001600160a01b03919091166000908152600460205260409020805467ffffffffffffffff19166001600160401b03909216919091179055565b919050565b612b1781612b4e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b612bb25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161023a565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001612c40604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b828054828255906000526020600020908101928215612cfd579160200282015b82811115612cfd57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612cc8565b50612d09929150612d0d565b5090565b5b80821115612d095760008155600101612d0e565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612d5a57612d5a612d22565b60405290565b60405161016081016001600160401b0381118282101715612d5a57612d5a612d22565b604080519081016001600160401b0381118282101715612d5a57612d5a612d22565b604051601f8201601f191681016001600160401b0381118282101715612dcd57612dcd612d22565b604052919050565b600082601f830112612de657600080fd5b81356001600160401b03811115612dff57612dff612d22565b612e12601f8201601f1916602001612da5565b818152846020838601011115612e2757600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612e5657600080fd5b81356001600160401b03811115612e6c57600080fd5b612e7884828501612dd5565b949350505050565b805160408084528151908401819052600091602091908201906060860190845b81811015612ec55783516001600160a01b031683529284019291840191600101612ea0565b50509382015163ffffffff16949091019390935250919050565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a06080840152612f2060c0840182612e80565b905063ffffffff60808501511660a08401528091505092915050565b600060208284031215612f4e57600080fd5b5035919050565b80356001600160a01b0381168114612b0957600080fd5b600060208284031215612f7e57600080fd5b612f8782612f55565b9392505050565b803560ff81168114612b0957600080fd5b803563ffffffff81168114612b0957600080fd5b803561ffff81168114612b0957600080fd5b80356001600160401b0381168114612b0957600080fd5b60006001600160401b03821115612ff557612ff5612d22565b5060051b60200190565b600082601f83011261301057600080fd5b8135602061302561302083612fdc565b612da5565b82815260079290921b8401810191818101908684111561304457600080fd5b8286015b848110156130a557608081890312156130615760008081fd5b613069612d38565b8135815284820135858201526040613082818401612f8e565b908201526060613093838201612f8e565b90820152835291830191608001613048565b509695505050505050565b6000602082840312156130c257600080fd5b81356001600160401b03808211156130d957600080fd5b9083019061016082860312156130ee57600080fd5b6130f6612d60565b6130ff83612f8e565b815261310d60208401612f9f565b602082015261311e60408401612f9f565b604082015261312f60608401612fb3565b60608201526080830135608082015261314a60a08401612fc5565b60a082015261315b60c08401612f8e565b60c082015260e08301358281111561317257600080fd5b61317e87828601612dd5565b60e083015250610100613192818501612f9f565b9082015261012083810135838111156131aa57600080fd5b6131b688828701612fff565b91830191909152506101409283013592810192909252509392505050565b60005b838110156131ef5781810151838201526020016131d7565b50506000910152565b600081518084526132108160208601602086016131d4565b601f01601f19169290920160200192915050565b8215158152604060208201526000612e7860408301846131f8565b60008060006060848603121561325457600080fd5b833592506020808501356001600160401b038082111561327357600080fd5b61327f88838901612fff565b9450604087013591508082111561329557600080fd5b90860190604082890312156132a957600080fd5b6132b1612d83565b8235828111156132c057600080fd5b83019150601f820189136132d357600080fd5b81356132e161302082612fdc565b81815260059190911b8301850190858101908b83111561330057600080fd5b938601935b828510156133255761331685612f55565b82529386019390860190613305565b8352506133359050838501612f9f565b84820152809450505050509250925092565b600081518084526020808501945080840160005b838110156133a057815180518852838101518489015260408082015160ff908116918a019190915260609182015116908801526080909601959082019060010161335b565b509495945050505050565b805160ff168252600061016060208301516133ce602086018263ffffffff169052565b5060408301516133e6604086018263ffffffff169052565b5060608301516133fc606086018261ffff169052565b506080830151608085015260a083015161342160a08601826001600160401b03169052565b5060c083015161343660c086018260ff169052565b5060e08301518160e086015261344e828601826131f8565b915050610100808401516134698287018263ffffffff169052565b505061012080840151858303828701526134838382613347565b61014095860151969095019590955250919392505050565b602081526000612f8760208301846133ab565b6000806000606084860312156134c357600080fd5b6134cc84612f9f565b925060208401356001600160401b038111156134e757600080fd5b6134f386828701612dd5565b92505061350260408501612f8e565b90509250925092565b6000806040838503121561351e57600080fd5b61352783612fb3565b946020939093013593505050565b6000806020838503121561354857600080fd5b82356001600160401b038082111561355f57600080fd5b818501915085601f83011261357357600080fd5b81358181111561358257600080fd5b86602082850101111561359457600080fd5b60209290920196919550909350505050565b6060815260006135b960608301866133ab565b841515602084015282810360408401526135d381856131f8565b9695505050505050565b6000602082840312156135ef57600080fd5b612f8782612f9f565b602081526000612f876020830184612e80565b634e487b7160e01b600052601160045260246000fd5b808201808211156120145761201461360b565b634e487b7160e01b600052603260045260246000fd5b60006001820161365c5761365c61360b565b5060010190565b602081526000612f8760208301846131f8565b6020808252600e908201526d696e76616c6964204d6f64756c6560901b604082015260600190565b63ffffffff8181168382160190808211156136bb576136bb61360b565b5092915050565b60ff81811683821601908111156120145761201461360b565b818103818111156120145761201461360b565b6001600160401b038516815263ffffffff8416602082015260806040820152600061371c60808301856131f8565b905060ff8316606083015295945050505050565b80820281158282048414176120145761201461360b565b60008261376457634e487b7160e01b600052601260045260246000fd5b500490565b6000825161377b8184602087016131d4565b9190910192915050565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b16603282015281516000906137f98160338501602087016131d4565b9190910160330198975050505050505050565b6001600160401b038181168382160190808211156136bb576136bb61360b56fe6e6f74207369676e65642062792063757272656e7420677561726469616e20736574676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a2646970667358221220deb3f13d00500a9575bb4ab72843bc7c65d67f887c8fa90938c4b4bc9bd939e664736f6c63430008110033";

type MockImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockImplementation__factory extends ContractFactory {
  constructor(...args: MockImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockImplementation> {
    return super.deploy(overrides || {}) as Promise<MockImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockImplementation {
    return super.attach(address) as MockImplementation;
  }
  override connect(signer: Signer): MockImplementation__factory {
    return super.connect(signer) as MockImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockImplementationInterface {
    return new utils.Interface(_abi) as MockImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockImplementation {
    return new Contract(address, _abi, signerOrProvider) as MockImplementation;
  }
}
