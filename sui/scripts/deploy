#!/usr/bin/env bash

set -euo pipefail

function usage() {
cat <<EOF >&2
Usage:
  $(basename "$0") <devnet|testnet|mainnet> -- Deploy the contracts
EOF
exit 1
}

NETWORK=$1 || usage

if [ "$NETWORK" = mainnet ]; then
  echo "Mainnet not supported yet"
  exit 1
elif [ "$NETWORK" = testnet ]; then
  echo "Testnet not supported yet"
  exit 1
elif [ "$NETWORK" = devnet ]; then
  GUARDIAN_ADDR=befa429d57cd18b7f8a4d91a2da9ab4af05d0fbe
else
  usage
fi

echo -e "[1/4] Publishing core bridge contracts..."
WORMHOLE_PUBLISH_OUTPUT=$(worm sui deploy wormhole -n "$NETWORK")
echo "$WORMHOLE_PUBLISH_OUTPUT"

echo -e "\n[2/4] Publishing token bridge contracts..."
WORMHOLE_PACKAGE_ID=$(echo "$WORMHOLE_PUBLISH_OUTPUT" | grep -oP 'Deployed to: +\K.*')
TOKEN_BRIDGE_PUBLISH_OUTPUT=$(worm sui deploy token_bridge -n "$NETWORK" --named-addresses "wormhole=$WORMHOLE_PACKAGE_ID")
echo "$TOKEN_BRIDGE_PUBLISH_OUTPUT"

echo -e "\n[3/4] Initializing core bridge..."
WORMHOLE_INIT_OUTPUT=$(worm sui init-wormhole -n "$NETWORK" --initial-guardian "$GUARDIAN_ADDR" --package-id "$WORMHOLE_PACKAGE_ID")
echo "$WORMHOLE_INIT_OUTPUT"

echo -e "\n[4/4] Initializing token bridge..."
TOKEN_BRIDGE_PACKAGE_ID=$(echo "$TOKEN_BRIDGE_PUBLISH_OUTPUT" | grep -oP 'Deployed to: +\K.*')
WORMHOLE_STATE_OBJECT_ID=$(echo "$WORMHOLE_INIT_OUTPUT" | grep -oP 'Wormhole state object ID: +\K.*')
worm sui init-token-bridge -n "$NETWORK" --package-id "$TOKEN_BRIDGE_PACKAGE_ID" --worm-state "$WORMHOLE_STATE_OBJECT_ID"

echo -e "\nDeployments successful!"